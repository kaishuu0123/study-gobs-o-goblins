{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/state/components.js","webpack:///./src/state/cache.js","webpack:///../node_modules/camelcase/index.js","webpack:///../src/util/string-util.js","webpack:///../src/ComponentRegistry.js","webpack:///../node_modules/deepmerge/dist/cjs.js","webpack:///../src/PrefabComponent.js","webpack:///../src/Prefab.js","webpack:///../src/PrefabRegistry.js","webpack:///../src/Component.js","webpack:///../src/EntityEvent.js","webpack:///../src/util/bit-util.js","webpack:///../src/Entity.js","webpack:///../src/Query.js","webpack:///../src/World.js","webpack:///../src/Engine.js","webpack:///./node_modules/pathfinding/src/core/DiagonalMovement.js","webpack:///./node_modules/lodash.sample/index.js","webpack:///./node_modules/lodash/lodash.js","webpack:///./node_modules/lodash.times/index.js","webpack:///./node_modules/pathfinding/src/core/Util.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/pathfinding/src/core/Heuristic.js","webpack:///./node_modules/lodash.random/index.js","webpack:///./node_modules/heap/index.js","webpack:///./node_modules/pathfinding/src/finders/JumpPointFinderBase.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/pathfinding/src/core/Node.js","webpack:///./node_modules/pathfinding/src/finders/AStarFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiAStarFinder.js","webpack:///./node_modules/lodash.get/index.js","webpack:///./node_modules/pathfinding/index.js","webpack:///./node_modules/lodash.some/index.js","webpack:///./node_modules/lodash.set/index.js","webpack:///./node_modules/lodash.throttle/index.js","webpack:///./node_modules/pathfinding/src/PathFinding.js","webpack:///./node_modules/heap/lib/heap.js","webpack:///./node_modules/pathfinding/src/core/Grid.js","webpack:///./node_modules/pathfinding/src/finders/BestFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BreadthFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/DijkstraFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiBestFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiBreadthFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiDijkstraFinder.js","webpack:///./node_modules/pathfinding/src/finders/IDAStarFinder.js","webpack:///./node_modules/pathfinding/src/finders/JumpPointFinder.js","webpack:///./node_modules/pathfinding/src/finders/JPFNeverMoveDiagonally.js","webpack:///./node_modules/pathfinding/src/finders/JPFAlwaysMoveDiagonally.js","webpack:///./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfNoObstacles.js","webpack:///./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfAtMostOneObstacle.js","webpack:///./src/lib/grid.js","webpack:///./src/lib/canvas.js","webpack:///./src/state/ecs.js","webpack:///./src/state/prefabs.js","webpack:///./src/lib/dungeon.js","webpack:///./src/lib/pathfinding.js","webpack:///./src/systems/ai.js","webpack:///./src/lib/fov.js","webpack:///./src/systems/fov.js","webpack:///./src/systems/movement.js","webpack:///./src/systems/render.js","webpack:///./src/systems/effects.js","webpack:///./src/systems/animation.js","webpack:///./src/systems/targeting.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","effectProps","component","delta","animate","char","color","events","addComponents","duration","Appearance","Component","background","Animate","evt","this","startTime","data","time","ActiveEffects","Effects","Move","x","y","z","relative","Position","locId","entity","position","addCacheSet","id","deleteCacheSet","IsBlocking","IsDead","Layer100","Layer300","Layer400","Inventory","list","push","remove","add","filter","item","destroy","IsInFov","IsOpaque","IsPickup","IsRevealed","Description","Ai","Defense","max","current","Health","amount","appearance","has","ai","isBlocking","layer400","handle","Power","RequiresTarget","acquired","aoeRange","Target","TargetingItem","Paralyzed","cache","entitiesAtLocation","floors","addCache","path","set","readCache","Set","readCacheSet","serializeCache","keys","reduce","acc","val","deserializeCache","clearCache","camelCase","input","options","Array","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","camelCache","camelString","result","camelcaseSlow","clazz","BigInt","_map","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","cloneUnlessOtherwiseSpecified","deepmerge","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","constructor","properties","overwrite","initialProps","comp","props","merge","prefabProps","parent","arrComps","ckey","initialCompProps","registered","prefab","Prefab","inherit","ref","console","comps","componentData","PrefabComponent","deserialize","_prefabs","world","ob","ONE","subtractBit","num","bit","addBit","bitIntersection","n1","n2","serializeComponent","serializeComponentKeyed","ser","attachComponentKeyed","attachComponentArray","attachComponent","keyProp","removeComponentKeyed","idx","removeComponentArray","removeComponent","v","components","arr","EntityEvent","any","filters","all","none","_cache","indexOf","bits","_any","isTracking","matches","cb","Map","Math","_entities","Entity","getEntity","query","Query","engine","json","entities","e","entityData","createEntity","_createOrGetEntityById","type","def","q","PrefabRegistry","World","Always","Never","IfAtMostOneObstacle","OnlyWhenNoObstacles","reIsUint","baseValues","iteratee","index","length","arrayMap","func","transform","objectProto","objectToString","toString","propertyIsEnumerable","nativeFloor","floor","nativeKeys","arg","nativeRandom","random","arrayLikeKeys","inherited","isArray","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","baseTimes","String","skipIndexes","isIndex","baseKeys","Ctor","proto","test","isLength","tag","isObject","isFunction","collection","lower","upper","undefined","FUNC_ERROR_TEXT","PLACEHOLDER","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","global","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","apply","thisArg","args","arrayAggregator","setter","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","basePropertyOf","baseReduce","baseUnary","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","mapToArray","map","size","forEach","overArg","replaceHolders","setToArray","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","split","asciiToArray","unescapeHtmlChar","_","runInContext","context","uid","defaults","pick","Date","arrayProto","funcProto","coreJsData","funcToString","idCounter","maskSrcKey","exec","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","replace","Buffer","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","splice","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","setTimeout","nativeCeil","ceil","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeMax","nativeMin","min","nativeNow","nativeParseInt","nativeReverse","reverse","DataView","Promise","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","Stack","isArr","isArg","isBuff","isType","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","number","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","initCloneArray","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","pop","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","baseGet","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","sort","baseSortBy","objCriteria","criteria","othCriteria","ordersLength","compareAscending","order","compareMultiple","basePickBy","baseSet","basePullAll","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","slice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","createCtor","arguments","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","fn","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrStacked","arrValue","flatten","otherFunc","getValue","stubArray","hasPath","hasFunc","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bindKey","WRAP_BIND_FLAG","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","backtrace","node","x0","y0","x1","y1","sx","sy","dx","dy","err","e2","abs","line","biBacktrace","nodeA","nodeB","pathA","pathB","pathLength","a","b","sqrt","expandPath","coord0","coord1","interpolated","interpolatedLen","j","expanded","len","smoothenPath","grid","newPath","coord","testCoord","blocked","isWalkableAt","lastValidCoord","compressPath","lx","ly","ldx","ldy","sq","compressed","px","py","g","window","manhattan","euclidean","octile","F","SQRT2","chebyshev","Heap","Util","Heuristic","JumpPointFinderBase","opt","heuristic","trackJumpRecursion","findPath","startX","startY","endX","endY","openList","f","startNode","getNodeAt","endNode","opened","empty","closed","_identifySuccessors","neighbors","neighbor","jumpPoint","jx","jy","ng","jumpNode","_findNeighbors","_jump","h","updateItem","webpackPolyfill","deprecate","children","walkable","DiagonalMovement","AStarFinder","allowDiagonal","dontCrossCorners","weight","diagonalMovement","getNeighbors","BiAStarFinder","cmp","startOpenList","endOpenList","reLeadingDot","isHostObject","isMasked","UNORDERED_COMPARE_FLAG","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","_siftdown","_siftup","lo","hi","lastelt","returnitem","_ref","_i","_len","_ref1","_results","_results1","_j","pos","elem","los","startpos","newitem","parentpos","childpos","endpos","rightpos","nodes","pushpop","peek","contains","heap","insert","top","front","Node","Grid","width_or_matrix","height","matrix","width","_buildNodes","isInside","setWalkableAt","s0","d0","s1","d1","s2","d2","s3","d3","thisNodes","newGrid","newNodes","BestFirstFinder","orig","BreadthFirstFinder","shift","DijkstraFinder","BiBestFirstFinder","BiBreadthFirstFinder","by","BiDijkstraFinder","IDAStarFinder","trackRecursion","timeLimit","route","getTime","cutoff","k","neighbour","neighbours","retainCount","tested","cutOff","JPFNeverMoveDiagonally","JPFAlwaysMoveDiagonally","JPFMoveDiagonallyIfNoObstacles","JPFMoveDiagonallyIfAtMostOneObstacle","neighborNodes","neighborNode","isNextWalkable","isTopWalkable","isBottomWalkable","isRightWalkable","isLeftWalkable","CARDINAL","DIAGONAL","toCell","cellOrId","cell","idToCell","toLocId","cellToId","rectangle","tileProps","hasWalls","tiles","x2","y2","yi","xi","center","coords","pixelRatio","devicePixelRatio","canvas","document","querySelector","ctx","getContext","menu","messageLog","playerHud","infoBar","inventory","calculatedFontSize","innerWidth","cellWidth","cellHeight","fontSize","style","cssText","font","textAlign","textBaseline","drawBackground","fillStyle","fillRect","drawCell","drawChar","fillText","drawText","text","clearCanvas","w","posX","posY","clearRect","pxToCell","ev","bounds","getBoundingClientRect","relativeX","clientX","left","relativeY","clientY","trunc","ecs","Engine","createWorld","registerComponent","registerPrefab","digHorizontalPassage","sprite","digVerticalPassage","createDungeon","minRoomSize","maxRoomSize","maxRoomCount","dungeon","rooms","roomTiles","rw","rh","rx","ry","candidate","room","rect2","rect1","passageTiles","prevRoom","curr","tile","createPrefab","baseMatrix","aiEntities","createQuery","moveToTarget","goal","JSON","parse","stringify","eId","PF","aStar","newLoc","octantTransforms","xx","xy","yx","yy","createFOV","opaqueEntities","originX","originY","originZ","radius","visible","blockingLocations","isOpaque","reveal","castShadows","row","newStart","distance","deltaY","deltaX","currentX","currentY","leftSlope","rightSlope","octant","fov","cell1","cell2","pow","inFovEntities","origin","FOV","isInFov","entitiesAtLoc","movableEntities","movement","move","mx","my","mz","blockers","damage","power","defense","fireEvent","health","addLog","description","attack","layer100Entities","layer300Entities","layer400Entities","renderMap","renderPlayerHud","player","hp","renderMessageLog","clearInfoBar","renderInventory","rect","selectedInventoryIndex","render","gameState","onmousemove","mPos","isRevealed","renderInfoBar","renderTargeting","ActiveEffectsEntities","classes","effects","activeEffects","event","str","animatingEntities","animation","hex","frameTime","framePercent","targetingEntities","targeting","targetingItem","serialize","userInput","playerTurn","enemiesInFOV","unshift","initGame","stairsDown","createDungeonLevel","createStairsUp","stairsUp","createStairsDown","openTiles","goToDungeonLevel","level","goingUp","addEventListener","processUserInput","gameSaveData","getEntities","newGame","localStorage","getItem","playerId","loadGame","log","setItem","pickupFound","isPickup","requiresTarget","isDead","requestAnimationFrame","gameLoop"],"mappings":"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","file":"main.79ace55c9bb1c3326438.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n","import { Component } from \"geotic\";\nimport { remove } from \"lodash\";\nimport { addCacheSet, deleteCacheSet } from \"./cache\";\n\nconst effectProps = {\n  component: \"\",\n  delta: \"\",\n  animate: { char: \"\", color: \"\" },\n  events: [], // { name: \"\", args: {} },\n  addComponents: [], // { name: '', properties: {} }\n  duration: 0, // in turns\n};\n\nexport class Appearance extends Component {\n  static properties = {\n    color: \"#ff0077\",\n    char: \"?\",\n    background: \"#000\",\n  };\n}\n\nexport class Animate extends Component {\n  static allowMultiple = true;\n  static properties = {\n    startTime: null,\n    duration: 250,\n    char: \"\",\n    color: \"\",\n  };\n\n  onSetStartTime(evt) {\n    this.startTime = evt.data.time;\n  }\n}\n\nexport class ActiveEffects extends Component {\n  static allowMultiple = true;\n  static properties = effectProps;\n}\n\nexport class Effects extends Component {\n  static allowMultiple = true;\n  static properties = effectProps;\n}\n\nexport class Move extends Component {\n  static properties = { x: 0, y: 0, z: 0, relative: true };\n}\n\nexport class Position extends Component {\n  static properties = { x: 0, y: 0, z: -1 };\n\n  onAttached() {\n    const locId = `${this.entity.position.x},${this.entity.position.y},${this.entity.position.z}`;\n    addCacheSet(\"entitiesAtLocation\", locId, this.entity.id);\n  }\n\n  // XXX: onDetached\n  onDestroyed() {\n    const locId = `${this.x},${this.y},${this.z}`;\n    deleteCacheSet(\"entitiesAtLocation\", locId, this.entity.id);\n  }\n}\n\nexport class IsBlocking extends Component {}\n\nexport class IsDead extends Component {}\n\nexport class Layer100 extends Component {}\n\nexport class Layer300 extends Component {}\n\nexport class Layer400 extends Component {}\n\nexport class Inventory extends Component {\n  static properties = {\n    list: [],\n  };\n\n  onPickUp(evt) {\n    this.list.push(evt.data);\n\n    if (evt.data.position) {\n      evt.data.remove(evt.data.position);\n    }\n  }\n\n  onDrop(evt) {\n    remove(this.list, (x) => x.id === evt.data.id);\n    evt.data.add(Position, this.entity.position);\n  }\n\n  // XXX\n  onConsume(evt) {\n    this.list = this.list.filter(\n      (item) => item.id !== evt.data.id\n    );\n\n    evt.data.destroy();\n  }\n}\n\nexport class IsInFov extends Component {}\n\nexport class IsOpaque extends Component {}\n\nexport class IsPickup extends Component {}\n\nexport class IsRevealed extends Component {}\n\nexport class Description extends Component {\n  static properties = { name: \"No Name\" };\n}\n\nexport class Ai extends Component {}\n\nexport class Defense extends Component {\n  static properties = { max: 1, current: 1 };\n}\n\nexport class Health extends Component {\n  static properties = { max: 10, current: 1 };\n\n  onTakeDamage(evt) {\n    this.current -= evt.data.amount;\n\n    if (this.current <= 0) {\n      this.entity.appearance.char = \"%\";\n      if (this.entity.has(Ai)) {\n        this.entity.remove(this.entity.ai);\n      }\n      this.entity.remove(this.entity.isBlocking);\n      this.entity.add(IsDead);\n      this.entity.remove(this.entity.layer400);\n      this.entity.add(Layer300)\n    }\n\n    evt.handle();\n  }\n}\n\nexport class Power extends Component {\n  static properties = { max: 5, current: 5 };\n}\n\nexport class RequiresTarget extends Component {\n  static properties = {\n    acquired: \"RANDOM\",\n    aoeRange: 0,\n  };\n};\n\nexport class Target extends Component {\n  static allowMultiple = true;\n  static properties = { locId: \"\" };\n}\n\nexport class TargetingItem extends Component {\n  static properties = { item: \"<Entity>\" };\n}\n\nexport class Paralyzed extends Component {}","import get from 'lodash.get';\nimport set from 'lodash.set';\n\nexport const cache = {\n  entitiesAtLocation: {},\n  z: -1,\n  floors: {}, // { x: { stairsUp: '', stairs Down: '' } }\n};\n\nexport const addCache = (path, value) => {\n  set(cache, path, value);\n};\n\nexport const readCache = (path) => get(cache, path);\n\nexport const addCacheSet = (name, key, value) => {\n  if (cache[name][key]) {\n    cache[name][key].add(value);\n  } else {\n    cache[name][key] = new Set();\n    cache[name][key].add(value);\n  }\n};\n\nexport const deleteCacheSet = (name, key, value) => {\n  if (cache[name][key] && cache[name][key].has(value)) {\n    cache[name][key].delete(value);\n  }\n};\n\nexport const readCacheSet = (name, key, value) => {\n  if (cache[name][key]) {\n    if (value) {\n      return cache[name][key].get(value);\n    }\n\n    return cache[name][key];\n  }\n};\n\nexport const serializeCache = () => {\n  const entitiesAtLocation = Object.keys(cache.entitiesAtLocation).reduce(\n    (acc, val) => {\n      acc[val] = [...cache.entitiesAtLocation[val]];\n      return acc;\n    },\n    {}\n  );\n\n  return {\n    entitiesAtLocation,\n    z: cache.z,\n    floors: cache.floors,\n  };\n};\n\nexport const deserializeCache = (data) => {\n  cache.entitiesAtLocation = Object.keys(cache.entitiesAtLocation).reduce(\n    (acc, val) => {\n      acc[val] = new Set(data.entitiesAtLocation[val]);\n      return acc;\n    },\n    {}\n  );\n\n  cache.z = data.z;\n  cache.floors = data.floors;\n};\n\nexport const clearCache = () => {\n  cache.entitiesAtLocation = {};\n  cache.z = 1;\n  cache.floors = {};\n};\n\nexport default cache;","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\r\n\r\nconst camelCache = {};\r\n\r\nexport const camelString = (value) => {\r\n    const result = camelCache[value];\r\n\r\n    if (!result) {\r\n        camelCache[value] = camelcaseSlow(value);\r\n\r\n        return camelCache[value];\r\n    }\r\n\r\n    return result;\r\n};\r\n","import { camelString } from './util/string-util';\r\n\r\nexport class ComponentRegistry {\r\n    _cbit = 0;\r\n    _map = {};\r\n\r\n    register(clazz) {\r\n        const key = camelString(clazz.name);\r\n\r\n        clazz.prototype._ckey = key;\r\n        clazz.prototype._cbit = BigInt(++this._cbit);\r\n\r\n        this._map[key] = clazz;\r\n    }\r\n\r\n    get(key) {\r\n        return this._map[key];\r\n    }\r\n}\r\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\r\n\r\nexport default class PrefabComponent {\r\n    constructor(clazz, properties = {}, overwrite = true) {\r\n        this.clazz = clazz;\r\n        this.properties = properties;\r\n        this.overwrite = overwrite;\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        if (!this.clazz.allowMultiple && entity.has(this.clazz)) {\r\n            if (!this.overwrite) {\r\n                return;\r\n            }\r\n\r\n            const comp = entity[this.clazz.prototype._ckey];\r\n\r\n            entity.remove(comp);\r\n        }\r\n\r\n        const props = merge(this.properties, initialProps);\r\n\r\n        entity.add(this.clazz, props);\r\n    }\r\n}\r\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, prefabProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, prefabProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component) => {\r\n            const clazz = component.clazz;\r\n            const ckey = clazz.prototype._ckey;\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (clazz.allowMultiple) {\r\n                if (clazz.keyProperty) {\r\n                    const key = component.properties[clazz.keyProperty];\r\n\r\n                    if (prefabProps[ckey] && prefabProps[ckey][key]) {\r\n                        initialCompProps = prefabProps[ckey][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[ckey]) {\r\n                        arrComps[ckey] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        prefabProps[ckey] &&\r\n                        prefabProps[ckey][arrComps[ckey]]\r\n                    ) {\r\n                        initialCompProps = prefabProps[ckey][arrComps[ckey]];\r\n                    }\r\n\r\n                    arrComps[ckey]++;\r\n                }\r\n            } else {\r\n                initialCompProps = prefabProps[ckey];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import PrefabComponent from './PrefabComponent';\r\nimport Prefab from './Prefab';\r\nimport { camelString } from './util/string-util';\r\n\r\nexport class PrefabRegistry {\r\n    _prefabs = {};\r\n    _engine = null;\r\n\r\n    constructor(engine) {\r\n        this._engine = engine;\r\n    }\r\n\r\n    deserialize(data) {\r\n        const registered = this.get(data.name);\r\n\r\n        if (registered) {\r\n            return registered;\r\n        }\r\n\r\n        const prefab = new Prefab(data.name);\r\n\r\n        let inherit;\r\n\r\n        if (Array.isArray(data.inherit)) {\r\n            inherit = data.inherit;\r\n        } else if (typeof data.inherit === 'string') {\r\n            inherit = [data.inherit];\r\n        } else {\r\n            inherit = [];\r\n        }\r\n\r\n        prefab.inherit = inherit.map((parent) => {\r\n            const ref = this.get(parent);\r\n\r\n            if (!ref) {\r\n                console.warn(\r\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\r\n                );\r\n                return parent;\r\n            }\r\n\r\n            return ref;\r\n        });\r\n\r\n        const comps = data.components || [];\r\n\r\n        comps.forEach((componentData) => {\r\n            if (typeof componentData === 'string') {\r\n                const ckey = camelString(componentData);\r\n                const clazz = this._engine._components.get(ckey);\r\n\r\n                if (clazz) {\r\n                    prefab.addComponent(new PrefabComponent(clazz));\r\n\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (typeof componentData === 'object') {\r\n                const ckey = camelString(componentData.type);\r\n                const clazz = this._engine._components.get(ckey);\r\n\r\n                if (clazz) {\r\n                    prefab.addComponent(\r\n                        new PrefabComponent(\r\n                            clazz,\r\n                            componentData.properties,\r\n                            componentData.overwrite\r\n                        )\r\n                    );\r\n\r\n                    return;\r\n                }\r\n            }\r\n\r\n            console.warn(\r\n                `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\r\n            );\r\n        });\r\n\r\n        return prefab;\r\n    }\r\n\r\n    register(data) {\r\n        const prefab = this.deserialize(data);\r\n\r\n        this._prefabs[prefab.name] = prefab;\r\n    }\r\n\r\n    get(name) {\r\n        return this._prefabs[name];\r\n    }\r\n\r\n    create(world, name, properties = {}) {\r\n        const prefab = this.get(name);\r\n\r\n        if (!prefab) {\r\n            console.warn(\r\n                `Could not instantiate prefab \"${name}\" since it is not registered`\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        const entity = world.createEntity();\r\n\r\n        entity._qeligible = false;\r\n\r\n        prefab.applyToEntity(entity, properties);\r\n\r\n        entity._qeligible = true;\r\n        entity._candidacy();\r\n\r\n        return entity;\r\n    }\r\n}\r\n","export class Component {\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    get world() {\r\n        return this.entity.world;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    constructor(properties = {}) {\r\n        Object.assign(this, this.constructor.properties, properties);\r\n    }\r\n\r\n    destroy() {\r\n        this.entity.remove(this);\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.onDestroyed();\r\n        delete this.entity;\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        if (typeof this[evt.handlerName] === 'function') {\r\n            this[evt.handlerName](evt);\r\n        }\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.entity = entity;\r\n        this.onAttached(entity);\r\n    }\r\n\r\n    serialize() {\r\n        const ob = {};\r\n\r\n        for (const key in this.constructor.properties) {\r\n            ob[key] = this[key];\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    onAttached(entity) {}\r\n    onDestroyed() {}\r\n    onEvent(evt) {}\r\n}\r\n","import { camelString } from './util/string-util';\r\n\r\nexport class EntityEvent {\r\n    data = {};\r\n    prevented = false;\r\n    handled = false;\r\n\r\n    constructor(name, data = {}) {\r\n        this.name = name;\r\n        this.data = data;\r\n        this.handlerName = camelString(`on ${this.name}`);\r\n    }\r\n\r\n    is(name) {\r\n        return this.name === name;\r\n    }\r\n\r\n    handle() {\r\n        this.handled = true;\r\n        this.prevented = true;\r\n    }\r\n\r\n    prevent() {\r\n        this.prevented = true;\r\n    }\r\n}\r\n","const ONE = 1n;\r\n\r\nexport const subtractBit = (num, bit) => {\r\n    return num & ~(1n << bit);\r\n};\r\n\r\nexport const addBit = (num, bit) => {\r\n    return num | (ONE << bit);\r\n};\r\n\r\nexport const hasBit = (num, bit) => {\r\n    return (num >> bit) % 2n !== 0n;\r\n};\r\n\r\nexport const bitIntersection = (n1, n2) => {\r\n    return n1 & n2;\r\n};\r\n","import { Component } from './Component';\r\nimport { EntityEvent } from './EntityEvent';\r\nimport { addBit, hasBit, subtractBit } from './util/bit-util';\r\n\r\nconst attachComponent = (entity, component) => {\r\n    const key = component._ckey;\r\n\r\n    entity[key] = component;\r\n    entity.components[key] = component;\r\n};\r\n\r\nconst attachComponentKeyed = (entity, component) => {\r\n    const key = component._ckey;\r\n\r\n    if (!entity.components[key]) {\r\n        entity[key] = {};\r\n        entity.components[key] = {};\r\n    }\r\n\r\n    entity[key][component[component.keyProperty]] = component;\r\n    entity.components[key][component[component.keyProperty]] = component;\r\n};\r\n\r\nconst attachComponentArray = (entity, component) => {\r\n    const key = component._ckey;\r\n\r\n    if (!entity.components[key]) {\r\n        entity[key] = [];\r\n        entity.components[key] = [];\r\n    }\r\n\r\n    entity[key].push(component);\r\n    entity.components[key].push(component);\r\n};\r\n\r\nconst removeComponent = (entity, component) => {\r\n    const key = component._ckey;\r\n\r\n    delete entity[key];\r\n    delete entity.components[key];\r\n\r\n    entity._cbits = subtractBit(entity._cbits, component._cbit);\r\n    entity._candidacy();\r\n};\r\n\r\nconst removeComponentKeyed = (entity, component) => {\r\n    const key = component._ckey;\r\n    const keyProp = component[component.keyProperty];\r\n\r\n    delete entity[key][keyProp];\r\n    delete entity.components[key][keyProp];\r\n\r\n    if (Object.keys(entity[key]).length <= 0) {\r\n        delete entity[key];\r\n        delete entity.components[key];\r\n        entity._cbits = subtractBit(entity._cbits, component._cbit);\r\n        entity._candidacy();\r\n    }\r\n};\r\n\r\nconst removeComponentArray = (entity, component) => {\r\n    const key = component._ckey;\r\n    const idx = entity[key].indexOf(component);\r\n\r\n    entity[key].splice(idx, 1);\r\n    entity.components[key].splice(idx, 1);\r\n\r\n    if (entity[key].length <= 0) {\r\n        delete entity[key];\r\n        delete entity.components[key];\r\n        entity._cbits = subtractBit(entity._cbits, component._cbit);\r\n        entity._candidacy()\r\n    }\r\n};\r\n\r\nconst serializeComponent = (component) => {\r\n    return component.serialize();\r\n};\r\n\r\nconst serializeComponentArray = (arr) => {\r\n    return arr.map(serializeComponent);\r\n};\r\n\r\nconst serializeComponentKeyed = (ob) => {\r\n    const ser = {};\r\n\r\n    for (const k in ob) {\r\n        ser[k] = serializeComponent(ob[k]);\r\n    }\r\n\r\n    return ser;\r\n};\r\n\r\nexport class Entity {\r\n    _cbits = 0n;\r\n    _qeligible = true;\r\n\r\n    constructor(world, id) {\r\n        this.world = world;\r\n        this.id = id;\r\n        this.components = {};\r\n        this.isDestroyed = false;\r\n    }\r\n\r\n    _candidacy() {\r\n        if (this._qeligible) {\r\n            this.world._candidate(this);\r\n        }\r\n    }\r\n\r\n    add(clazz, properties) {\r\n        const component = new clazz(properties);\r\n\r\n        if (component.keyProperty) {\r\n            attachComponentKeyed(this, component);\r\n        } else if (component.allowMultiple) {\r\n            attachComponentArray(this, component);\r\n        } else {\r\n            attachComponent(this, component);\r\n        }\r\n\r\n        this._cbits = addBit(this._cbits, component._cbit);\r\n        component._onAttached(this);\r\n\r\n        this._candidacy();\r\n    }\r\n\r\n    has(clazz) {\r\n        return hasBit(this._cbits, clazz.prototype._cbit);\r\n    }\r\n\r\n    remove(component) {\r\n        if (component.keyProperty) {\r\n            removeComponentKeyed(this, component);\r\n        } else if (component.allowMultiple) {\r\n            removeComponentArray(this, component);\r\n        } else {\r\n            removeComponent(this, component);\r\n        }\r\n\r\n        component._onDestroyed();\r\n    }\r\n\r\n    destroy() {\r\n        for (const k in this.components) {\r\n            const v = this.components[k];\r\n\r\n            if (v instanceof Component) {\r\n                this._cbits = subtractBit(this._cbits, v._cbit);\r\n                v._onDestroyed();\r\n            } else if (v instanceof Array) {\r\n                for (const component of v) {\r\n                    this._cbits = subtractBit(this._cbits, component._cbit);\r\n                    component._onDestroyed();\r\n                }\r\n            } else {\r\n                for (const component of Object.values(v)) {\r\n                    this._cbits = subtractBit(this._cbits, component._cbit);\r\n                    component._onDestroyed();\r\n                }\r\n            }\r\n\r\n            delete this[k];\r\n            delete this.components[k];\r\n        }\r\n\r\n        this._candidacy();\r\n        this.world._destroyed(this.id);\r\n        this.components = {};\r\n        this.isDestroyed = true;\r\n    }\r\n\r\n    serialize() {\r\n        const components = {};\r\n\r\n        for (const k in this.components) {\r\n            const v = this.components[k];\r\n\r\n            if (v instanceof Component) {\r\n                components[k] = serializeComponent(v);\r\n            } else if (v instanceof Array) {\r\n                components[k] = serializeComponentArray(v);\r\n            } else {\r\n                components[k] = serializeComponentKeyed(v);\r\n            }\r\n        }\r\n\r\n        return {\r\n            id: this.id,\r\n            ...components,\r\n        };\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const key in this.components) {\r\n            const v = this.components[key];\r\n\r\n            if (v instanceof Component) {\r\n                v._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else if (v instanceof Array) {\r\n                for (let i = 0; i < v.length; i++) {\r\n                    v[i]._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            } else {\r\n                for (const component of Object.values(v)) {\r\n                    component._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import { addBit, bitIntersection } from './util/bit-util';\r\n\r\nexport class Query {\r\n    _cache = [];\r\n    _onAddListeners = [];\r\n    _onRemoveListeners = [];\r\n\r\n    constructor(world, filters) {\r\n        this._world = world;\r\n\r\n        const any = filters.any || [];\r\n        const all = filters.all || [];\r\n        const none = filters.none || [];\r\n\r\n        this._any = any.reduce((s, c) => {\r\n            return addBit(s, c.prototype._cbit);\r\n        }, 0n);\r\n\r\n        this._all = all.reduce((s, c) => {\r\n            return addBit(s, c.prototype._cbit);\r\n        }, 0n);\r\n\r\n        this._none = none.reduce((s, c) => {\r\n            return addBit(s, c.prototype._cbit);\r\n        }, 0n);\r\n\r\n        this.refresh();\r\n    }\r\n\r\n    onEntityAdded(fn) {\r\n        this._onAddListeners.push(fn);\r\n    }\r\n\r\n    onEntityRemoved(fn) {\r\n        this._onRemoveListeners.push(fn);\r\n    }\r\n\r\n    has(entity) {\r\n        return this.idx(entity) >= 0;\r\n    }\r\n\r\n    idx(entity) {\r\n        return this._cache.indexOf(entity);\r\n    }\r\n\r\n    matches(entity) {\r\n        const bits = entity._cbits;\r\n\r\n        const any = this._any === 0n || bitIntersection(bits, this._any) > 0;\r\n        const all = bitIntersection(bits, this._all) === this._all;\r\n        const none = bitIntersection(bits, this._none) === 0n;\r\n\r\n        return any && all && none;\r\n    }\r\n\r\n    candidate(entity) {\r\n        const idx = this.idx(entity);\r\n        const isTracking = idx >= 0;\r\n\r\n        if (!entity.isDestroyed && this.matches(entity)) {\r\n            if (!isTracking) {\r\n                this._cache.push(entity);\r\n                this._onAddListeners.forEach((cb) => cb(entity));\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (isTracking) {\r\n            this._cache.splice(idx, 1);\r\n            this._onRemoveListeners.forEach((cb) => cb(entity));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    refresh() {\r\n        this._cache = [];\r\n        this._world._entities.forEach((entity) => {\r\n            this.candidate(entity);\r\n        });\r\n    }\r\n\r\n    get() {\r\n        return this._cache;\r\n    }\r\n}\r\n","import { Entity } from './Entity';\r\nimport { Query } from './Query';\r\nimport { camelString } from './util/string-util';\r\n\r\nexport class World {\r\n    _id = 0;\r\n    _queries = [];\r\n    _entities = new Map();\r\n\r\n    constructor(engine) {\r\n        this.engine = engine;\r\n    }\r\n\r\n    createId() {\r\n        return ++this._id + Math.random().toString(36).substr(2, 9);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this._entities.get(id);\r\n    }\r\n\r\n    getEntities() {\r\n        return this._entities.values();\r\n    }\r\n\r\n    createEntity(id = this.createId()) {\r\n        const entity = new Entity(this, id);\r\n\r\n        this._entities.set(id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroyEntity(id) {\r\n        const entity = this.getEntity(id);\r\n\r\n        if (entity) {\r\n            entity.destroy();\r\n        }\r\n    }\r\n\r\n    destroyEntities() {\r\n        this._entities.forEach((entity) => {\r\n            entity.destroy();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.destroyEntities();\r\n        this._id = 0;\r\n        this._queries = [];\r\n        this._entities = new Map();\r\n    }\r\n\r\n    createQuery(filters) {\r\n        const query = new Query(this, filters);\r\n\r\n        this._queries.push(query);\r\n\r\n        return query;\r\n    }\r\n\r\n    createPrefab(name, properties = {}) {\r\n        return this.engine._prefabs.create(this, name, properties);\r\n    }\r\n\r\n    serialize(entities) {\r\n        const json = [];\r\n        const list = entities || this._entities;\r\n\r\n        list.forEach((e) => {\r\n            json.push(e.serialize());\r\n        });\r\n\r\n        return {\r\n            entities: json,\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this._createOrGetEntityById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this._deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    _createOrGetEntityById(id) {\r\n        return this.getEntity(id) || this.createEntity(id);\r\n    }\r\n\r\n    _deserializeEntity(data) {\r\n        const { id, ...components } = data;\r\n        const entity = this._createOrGetEntityById(id);\r\n        entity._qeligible = false;\r\n\r\n        Object.entries(components).forEach(([key, value]) => {\r\n            const type = camelString(key);\r\n            const def = this.engine._components.get(type);\r\n\r\n            if (def.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(def, d);\r\n                });\r\n            } else {\r\n                entity.add(def, value);\r\n            }\r\n        });\r\n\r\n        entity._qeligible = true;\r\n        entity._candidacy();\r\n    }\r\n\r\n    _candidate(entity) {\r\n        this._queries.forEach((q) => q.candidate(entity));\r\n    }\r\n\r\n    _destroyed(id) {\r\n        return this._entities.delete(id);\r\n    }\r\n}\r\n","import { ComponentRegistry } from './ComponentRegistry';\r\nimport { PrefabRegistry } from './PrefabRegistry';\r\nimport { World } from './World';\r\n\r\nexport class Engine {\r\n    _components = new ComponentRegistry();\r\n    _prefabs = new PrefabRegistry(this);\r\n\r\n    registerComponent(clazz) {\r\n        this._components.register(clazz);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this._prefabs.register(data);\r\n    }\r\n\r\n    createWorld() {\r\n        return new World(this);\r\n    }\r\n\r\n    destroyWorld(world) {\r\n        world.destroy();\r\n    }\r\n}\r\n","var DiagonalMovement = {\r\n    Always: 1,\r\n    Never: 2,\r\n    IfAtMostOneObstacle: 3,\r\n    OnlyWhenNoObstacles: 4\r\n};\r\n\r\nmodule.exports = DiagonalMovement;","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeKeys = overArg(Object.keys, Object),\n    nativeRandom = Math.random;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Gets a random element from `collection`.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n */\nfunction sample(collection) {\n  var array = isArrayLike(collection) ? collection : values(collection),\n      length = array.length;\n\n  return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = sample;\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.19';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(users, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(users, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = typeof iteratee == 'function' ? iteratee : identity;\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n","/**\r\n * Backtrace according to the parent records and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node} node End node\r\n * @return {Array<Array<number>>} the path\r\n */\r\nfunction backtrace(node) {\r\n    var path = [[node.x, node.y]];\r\n    while (node.parent) {\r\n        node = node.parent;\r\n        path.push([node.x, node.y]);\r\n    }\r\n    return path.reverse();\r\n}\r\nexports.backtrace = backtrace;\r\n\r\n/**\r\n * Backtrace from start and end node, and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node}\r\n * @param {Node}\r\n */\r\nfunction biBacktrace(nodeA, nodeB) {\r\n    var pathA = backtrace(nodeA),\r\n        pathB = backtrace(nodeB);\r\n    return pathA.concat(pathB.reverse());\r\n}\r\nexports.biBacktrace = biBacktrace;\r\n\r\n/**\r\n * Compute the length of the path.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {number} The length of the path\r\n */\r\nfunction pathLength(path) {\r\n    var i, sum = 0, a, b, dx, dy;\r\n    for (i = 1; i < path.length; ++i) {\r\n        a = path[i - 1];\r\n        b = path[i];\r\n        dx = a[0] - b[0];\r\n        dy = a[1] - b[1];\r\n        sum += Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    return sum;\r\n}\r\nexports.pathLength = pathLength;\r\n\r\n\r\n/**\r\n * Given the start and end coordinates, return all the coordinates lying\r\n * on the line formed by these coordinates, based on Bresenham's algorithm.\r\n * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\r\n * @param {number} x0 Start x coordinate\r\n * @param {number} y0 Start y coordinate\r\n * @param {number} x1 End x coordinate\r\n * @param {number} y1 End y coordinate\r\n * @return {Array<Array<number>>} The coordinates on the line\r\n */\r\nfunction interpolate(x0, y0, x1, y1) {\r\n    var abs = Math.abs,\r\n        line = [],\r\n        sx, sy, dx, dy, err, e2;\r\n\r\n    dx = abs(x1 - x0);\r\n    dy = abs(y1 - y0);\r\n\r\n    sx = (x0 < x1) ? 1 : -1;\r\n    sy = (y0 < y1) ? 1 : -1;\r\n\r\n    err = dx - dy;\r\n\r\n    while (true) {\r\n        line.push([x0, y0]);\r\n\r\n        if (x0 === x1 && y0 === y1) {\r\n            break;\r\n        }\r\n        \r\n        e2 = 2 * err;\r\n        if (e2 > -dy) {\r\n            err = err - dy;\r\n            x0 = x0 + sx;\r\n        }\r\n        if (e2 < dx) {\r\n            err = err + dx;\r\n            y0 = y0 + sy;\r\n        }\r\n    }\r\n\r\n    return line;\r\n}\r\nexports.interpolate = interpolate;\r\n\r\n\r\n/**\r\n * Given a compressed path, return a new path that has all the segments\r\n * in it interpolated.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} expanded path\r\n */\r\nfunction expandPath(path) {\r\n    var expanded = [],\r\n        len = path.length,\r\n        coord0, coord1,\r\n        interpolated,\r\n        interpolatedLen,\r\n        i, j;\r\n\r\n    if (len < 2) {\r\n        return expanded;\r\n    }\r\n\r\n    for (i = 0; i < len - 1; ++i) {\r\n        coord0 = path[i];\r\n        coord1 = path[i + 1];\r\n\r\n        interpolated = interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\r\n        interpolatedLen = interpolated.length;\r\n        for (j = 0; j < interpolatedLen - 1; ++j) {\r\n            expanded.push(interpolated[j]);\r\n        }\r\n    }\r\n    expanded.push(path[len - 1]);\r\n\r\n    return expanded;\r\n}\r\nexports.expandPath = expandPath;\r\n\r\n\r\n/**\r\n * Smoothen the give path.\r\n * The original path will not be modified; a new path will be returned.\r\n * @param {PF.Grid} grid\r\n * @param {Array<Array<number>>} path The path\r\n */\r\nfunction smoothenPath(grid, path) {\r\n    var len = path.length,\r\n        x0 = path[0][0],        // path start x\r\n        y0 = path[0][1],        // path start y\r\n        x1 = path[len - 1][0],  // path end x\r\n        y1 = path[len - 1][1],  // path end y\r\n        sx, sy,                 // current start coordinate\r\n        ex, ey,                 // current end coordinate\r\n        newPath,\r\n        i, j, coord, line, testCoord, blocked;\r\n\r\n    sx = x0;\r\n    sy = y0;\r\n    newPath = [[sx, sy]];\r\n\r\n    for (i = 2; i < len; ++i) {\r\n        coord = path[i];\r\n        ex = coord[0];\r\n        ey = coord[1];\r\n        line = interpolate(sx, sy, ex, ey);\r\n\r\n        blocked = false;\r\n        for (j = 1; j < line.length; ++j) {\r\n            testCoord = line[j];\r\n\r\n            if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\r\n                blocked = true;\r\n                break;\r\n            }\r\n        }\r\n        if (blocked) {\r\n            lastValidCoord = path[i - 1];\r\n            newPath.push(lastValidCoord);\r\n            sx = lastValidCoord[0];\r\n            sy = lastValidCoord[1];\r\n        }\r\n    }\r\n    newPath.push([x1, y1]);\r\n\r\n    return newPath;\r\n}\r\nexports.smoothenPath = smoothenPath;\r\n\r\n\r\n/**\r\n * Compress a path, remove redundant nodes without altering the shape\r\n * The original path is not modified\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} The compressed path\r\n */\r\nfunction compressPath(path) {\r\n\r\n    // nothing to compress\r\n    if(path.length < 3) {\r\n        return path;\r\n    }\r\n\r\n    var compressed = [],\r\n        sx = path[0][0], // start x\r\n        sy = path[0][1], // start y\r\n        px = path[1][0], // second point x\r\n        py = path[1][1], // second point y\r\n        dx = px - sx, // direction between the two points\r\n        dy = py - sy, // direction between the two points\r\n        lx, ly,\r\n        ldx, ldy,\r\n        sq, i;\r\n\r\n    // normalize the direction\r\n    sq = Math.sqrt(dx*dx + dy*dy);\r\n    dx /= sq;\r\n    dy /= sq;\r\n\r\n    // start the new path\r\n    compressed.push([sx,sy]);\r\n\r\n    for(i = 2; i < path.length; i++) {\r\n\r\n        // store the last point\r\n        lx = px;\r\n        ly = py;\r\n\r\n        // store the last direction\r\n        ldx = dx;\r\n        ldy = dy;\r\n\r\n        // next point\r\n        px = path[i][0];\r\n        py = path[i][1];\r\n\r\n        // next direction\r\n        dx = px - lx;\r\n        dy = py - ly;\r\n\r\n        // normalize\r\n        sq = Math.sqrt(dx*dx + dy*dy);\r\n        dx /= sq;\r\n        dy /= sq;\r\n\r\n        // if the direction has changed, store the point\r\n        if ( dx !== ldx || dy !== ldy ) {\r\n            compressed.push([lx,ly]);\r\n        }\r\n    }\r\n\r\n    // store the last point\r\n    compressed.push([px,py]);\r\n\r\n    return compressed;\r\n}\r\nexports.compressPath = compressPath;\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * @namespace PF.Heuristic\r\n * @description A collection of heuristic functions.\r\n */\r\nmodule.exports = {\r\n\r\n  /**\r\n   * Manhattan distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} dx + dy\r\n   */\r\n  manhattan: function(dx, dy) {\r\n      return dx + dy;\r\n  },\r\n\r\n  /**\r\n   * Euclidean distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy)\r\n   */\r\n  euclidean: function(dx, dy) {\r\n      return Math.sqrt(dx * dx + dy * dy);\r\n  },\r\n\r\n  /**\r\n   * Octile distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy) for grids\r\n   */\r\n  octile: function(dx, dy) {\r\n      var F = Math.SQRT2 - 1;\r\n      return (dx < dy) ? F * dx + dy : F * dy + dx;\r\n  },\r\n\r\n  /**\r\n   * Chebyshev distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} max(dx, dy)\r\n   */\r\n  chebyshev: function(dx, dy) {\r\n      return Math.max(dx, dy);\r\n  }\r\n\r\n};\r\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat,\n    freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","module.exports = require('./lib/heap');\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Base class for the Jump Point Search algorithm\r\n * @param {object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction JumpPointFinderBase(opt) {\r\n    opt = opt || {};\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.trackJumpRecursion = opt.trackJumpRecursion || false;\r\n}\r\n\r\n/**\r\n * Find and return the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nJumpPointFinderBase.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = this.openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = this.startNode = grid.getNodeAt(startX, startY),\r\n        endNode = this.endNode = grid.getNodeAt(endX, endY), node;\r\n\r\n    this.grid = grid;\r\n\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        if (node === endNode) {\r\n            return Util.expandPath(Util.backtrace(endNode));\r\n        }\r\n\r\n        this._identifySuccessors(node);\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\n/**\r\n * Identify successors for the given node. Runs a jump point search in the\r\n * direction of each available neighbor, adding any points found to the open\r\n * list.\r\n * @protected\r\n */\r\nJumpPointFinderBase.prototype._identifySuccessors = function(node) {\r\n    var grid = this.grid,\r\n        heuristic = this.heuristic,\r\n        openList = this.openList,\r\n        endX = this.endNode.x,\r\n        endY = this.endNode.y,\r\n        neighbors, neighbor,\r\n        jumpPoint, i, l,\r\n        x = node.x, y = node.y,\r\n        jx, jy, dx, dy, d, ng, jumpNode,\r\n        abs = Math.abs, max = Math.max;\r\n\r\n    neighbors = this._findNeighbors(node);\r\n    for(i = 0, l = neighbors.length; i < l; ++i) {\r\n        neighbor = neighbors[i];\r\n        jumpPoint = this._jump(neighbor[0], neighbor[1], x, y);\r\n        if (jumpPoint) {\r\n\r\n            jx = jumpPoint[0];\r\n            jy = jumpPoint[1];\r\n            jumpNode = grid.getNodeAt(jx, jy);\r\n\r\n            if (jumpNode.closed) {\r\n                continue;\r\n            }\r\n\r\n            // include distance, as parent may not be immediately adjacent:\r\n            d = Heuristic.octile(abs(jx - x), abs(jy - y));\r\n            ng = node.g + d; // next `g` value\r\n\r\n            if (!jumpNode.opened || ng < jumpNode.g) {\r\n                jumpNode.g = ng;\r\n                jumpNode.h = jumpNode.h || heuristic(abs(jx - endX), abs(jy - endY));\r\n                jumpNode.f = jumpNode.g + jumpNode.h;\r\n                jumpNode.parent = node;\r\n\r\n                if (!jumpNode.opened) {\r\n                    openList.push(jumpNode);\r\n                    jumpNode.opened = true;\r\n                } else {\r\n                    openList.updateItem(jumpNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = JumpPointFinderBase;\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\r\n * A node in grid. \r\n * This class holds some basic information about a node and custom \r\n * attributes may be added, depending on the algorithms' needs.\r\n * @constructor\r\n * @param {number} x - The x coordinate of the node on the grid.\r\n * @param {number} y - The y coordinate of the node on the grid.\r\n * @param {boolean} [walkable] - Whether this node is walkable.\r\n */\r\nfunction Node(x, y, walkable) {\r\n    /**\r\n     * The x coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.x = x;\r\n    /**\r\n     * The y coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.y = y;\r\n    /**\r\n     * Whether this node can be walked through.\r\n     * @type boolean\r\n     */\r\n    this.walkable = (walkable === undefined ? true : walkable);\r\n}\r\n\r\nmodule.exports = Node;\r\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder. Based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching \r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction AStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    //admissible. It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        // if reached the end position, construct the path and return it\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    openList.push(neighbor);\r\n                    neighbor.opened = true;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    openList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = AStarFinder;\r\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder.\r\n * based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction BiAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    //When diagonal movement is allowed the manhattan heuristic is not admissible\r\n    //It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var cmp = function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        },\r\n        startOpenList = new Heap(cmp),\r\n        endOpenList = new Heap(cmp),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng,\r\n        BY_START = 1, BY_END = 2;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    // and push it into the start open list\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n    startOpenList.push(startNode);\r\n    startNode.opened = BY_START;\r\n\r\n    // set the `g` and `f` value of the end node to be 0\r\n    // and push it into the open open list\r\n    endNode.g = 0;\r\n    endNode.f = 0;\r\n    endOpenList.push(endNode);\r\n    endNode.opened = BY_END;\r\n\r\n    // while both the open lists are not empty\r\n    while (!startOpenList.empty() && !endOpenList.empty()) {\r\n\r\n        // pop the position of start node which has the minimum `f` value.\r\n        node = startOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_END) {\r\n                return Util.biBacktrace(node, neighbor);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    startOpenList.push(neighbor);\r\n                    neighbor.opened = BY_START;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    startOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n\r\n\r\n        // pop the position of end node which has the minimum `f` value.\r\n        node = endOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_START) {\r\n                return Util.biBacktrace(neighbor, node);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - startX), abs(y - startY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    endOpenList.push(neighbor);\r\n                    neighbor.opened = BY_END;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    endOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiAStarFinder;\r\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","module.exports = require('./src/PathFinding');\r\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = some;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","module.exports = {\r\n    'Heap'                      : require('heap'),\r\n    'Node'                      : require('./core/Node'),\r\n    'Grid'                      : require('./core/Grid'),\r\n    'Util'                      : require('./core/Util'),\r\n    'DiagonalMovement'          : require('./core/DiagonalMovement'),\r\n    'Heuristic'                 : require('./core/Heuristic'),\r\n    'AStarFinder'               : require('./finders/AStarFinder'),\r\n    'BestFirstFinder'           : require('./finders/BestFirstFinder'),\r\n    'BreadthFirstFinder'        : require('./finders/BreadthFirstFinder'),\r\n    'DijkstraFinder'            : require('./finders/DijkstraFinder'),\r\n    'BiAStarFinder'             : require('./finders/BiAStarFinder'),\r\n    'BiBestFirstFinder'         : require('./finders/BiBestFirstFinder'),\r\n    'BiBreadthFirstFinder'      : require('./finders/BiBreadthFirstFinder'),\r\n    'BiDijkstraFinder'          : require('./finders/BiDijkstraFinder'),\r\n    'IDAStarFinder'             : require('./finders/IDAStarFinder'),\r\n    'JumpPointFinder'           : require('./finders/JumpPointFinder'),\r\n};\r\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n    module.exports = Heap;\n  } else {\n    window.Heap = Heap;\n  }\n\n}).call(this);\n","var Node = require('./Node');\r\nvar DiagonalMovement = require('./DiagonalMovement');\r\n\r\n/**\r\n * The Grid class, which serves as the encapsulation of the layout of the nodes.\r\n * @constructor\r\n * @param {number|Array<Array<(number|boolean)>>} width_or_matrix Number of columns of the grid, or matrix\r\n * @param {number} height Number of rows of the grid.\r\n * @param {Array<Array<(number|boolean)>>} [matrix] - A 0-1 matrix\r\n *     representing the walkable status of the nodes(0 or false for walkable).\r\n *     If the matrix is not supplied, all the nodes will be walkable.  */\r\nfunction Grid(width_or_matrix, height, matrix) {\r\n    var width;\r\n\r\n    if (typeof width_or_matrix !== 'object') {\r\n        width = width_or_matrix;\r\n    } else {\r\n        height = width_or_matrix.length;\r\n        width = width_or_matrix[0].length;\r\n        matrix = width_or_matrix;\r\n    }\r\n\r\n    /**\r\n     * The number of columns of the grid.\r\n     * @type number\r\n     */\r\n    this.width = width;\r\n    /**\r\n     * The number of rows of the grid.\r\n     * @type number\r\n     */\r\n    this.height = height;\r\n\r\n    /**\r\n     * A 2D array of nodes.\r\n     */\r\n    this.nodes = this._buildNodes(width, height, matrix);\r\n}\r\n\r\n/**\r\n * Build and return the nodes.\r\n * @private\r\n * @param {number} width\r\n * @param {number} height\r\n * @param {Array<Array<number|boolean>>} [matrix] - A 0-1 matrix representing\r\n *     the walkable status of the nodes.\r\n * @see Grid\r\n */\r\nGrid.prototype._buildNodes = function(width, height, matrix) {\r\n    var i, j,\r\n        nodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        nodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            nodes[i][j] = new Node(j, i);\r\n        }\r\n    }\r\n\r\n\r\n    if (matrix === undefined) {\r\n        return nodes;\r\n    }\r\n\r\n    if (matrix.length !== height || matrix[0].length !== width) {\r\n        throw new Error('Matrix size does not fit');\r\n    }\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        for (j = 0; j < width; ++j) {\r\n            if (matrix[i][j]) {\r\n                // 0, false, null will be walkable\r\n                // while others will be un-walkable\r\n                nodes[i][j].walkable = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return nodes;\r\n};\r\n\r\n\r\nGrid.prototype.getNodeAt = function(x, y) {\r\n    return this.nodes[y][x];\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the node at the given position is walkable.\r\n * (Also returns false if the position is outside the grid.)\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @return {boolean} - The walkability of the node.\r\n */\r\nGrid.prototype.isWalkableAt = function(x, y) {\r\n    return this.isInside(x, y) && this.nodes[y][x].walkable;\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the position is inside the grid.\r\n * XXX: `grid.isInside(x, y)` is wierd to read.\r\n * It should be `(x, y) is inside grid`, but I failed to find a better\r\n * name for this method.\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {boolean}\r\n */\r\nGrid.prototype.isInside = function(x, y) {\r\n    return (x >= 0 && x < this.width) && (y >= 0 && y < this.height);\r\n};\r\n\r\n\r\n/**\r\n * Set whether the node on the given position is walkable.\r\n * NOTE: throws exception if the coordinate is not inside the grid.\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @param {boolean} walkable - Whether the position is walkable.\r\n */\r\nGrid.prototype.setWalkableAt = function(x, y, walkable) {\r\n    this.nodes[y][x].walkable = walkable;\r\n};\r\n\r\n\r\n/**\r\n * Get the neighbors of the given node.\r\n *\r\n *     offsets      diagonalOffsets:\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 0 |   |    | 0 |   | 1 |\r\n *  +---+---+---+    +---+---+---+\r\n *  | 3 |   | 1 |    |   |   |   |\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 2 |   |    | 3 |   | 2 |\r\n *  +---+---+---+    +---+---+---+\r\n *\r\n *  When allowDiagonal is true, if offsets[i] is valid, then\r\n *  diagonalOffsets[i] and\r\n *  diagonalOffsets[(i + 1) % 4] is valid.\r\n * @param {Node} node\r\n * @param {DiagonalMovement} diagonalMovement\r\n */\r\nGrid.prototype.getNeighbors = function(node, diagonalMovement) {\r\n    var x = node.x,\r\n        y = node.y,\r\n        neighbors = [],\r\n        s0 = false, d0 = false,\r\n        s1 = false, d1 = false,\r\n        s2 = false, d2 = false,\r\n        s3 = false, d3 = false,\r\n        nodes = this.nodes;\r\n\r\n    // ↑\r\n    if (this.isWalkableAt(x, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x]);\r\n        s0 = true;\r\n    }\r\n    // →\r\n    if (this.isWalkableAt(x + 1, y)) {\r\n        neighbors.push(nodes[y][x + 1]);\r\n        s1 = true;\r\n    }\r\n    // ↓\r\n    if (this.isWalkableAt(x, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x]);\r\n        s2 = true;\r\n    }\r\n    // ←\r\n    if (this.isWalkableAt(x - 1, y)) {\r\n        neighbors.push(nodes[y][x - 1]);\r\n        s3 = true;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.Never) {\r\n        return neighbors;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        d0 = s3 && s0;\r\n        d1 = s0 && s1;\r\n        d2 = s1 && s2;\r\n        d3 = s2 && s3;\r\n    } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\r\n        d0 = s3 || s0;\r\n        d1 = s0 || s1;\r\n        d2 = s1 || s2;\r\n        d3 = s2 || s3;\r\n    } else if (diagonalMovement === DiagonalMovement.Always) {\r\n        d0 = true;\r\n        d1 = true;\r\n        d2 = true;\r\n        d3 = true;\r\n    } else {\r\n        throw new Error('Incorrect value of diagonalMovement');\r\n    }\r\n\r\n    // ↖\r\n    if (d0 && this.isWalkableAt(x - 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x - 1]);\r\n    }\r\n    // ↗\r\n    if (d1 && this.isWalkableAt(x + 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x + 1]);\r\n    }\r\n    // ↘\r\n    if (d2 && this.isWalkableAt(x + 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x + 1]);\r\n    }\r\n    // ↙\r\n    if (d3 && this.isWalkableAt(x - 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x - 1]);\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\n\r\n/**\r\n * Get a clone of this grid.\r\n * @return {Grid} Cloned grid.\r\n */\r\nGrid.prototype.clone = function() {\r\n    var i, j,\r\n\r\n        width = this.width,\r\n        height = this.height,\r\n        thisNodes = this.nodes,\r\n\r\n        newGrid = new Grid(width, height),\r\n        newNodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        newNodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            newNodes[i][j] = new Node(j, i, thisNodes[i][j].walkable);\r\n        }\r\n    }\r\n\r\n    newGrid.nodes = newNodes;\r\n\r\n    return newGrid;\r\n};\r\n\r\nmodule.exports = Grid;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BestFirstFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBestFirstFinder.prototype = new AStarFinder();\r\nBestFirstFinder.prototype.constructor = BestFirstFinder;\r\n\r\nmodule.exports = BestFirstFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = [],\r\n        diagonalMovement = this.diagonalMovement,\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        neighbors, neighbor, node, i, l;\r\n\r\n    // push the start pos into the queue\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the queue is not empty\r\n    while (openList.length) {\r\n        // take the front node from the queue\r\n        node = openList.shift();\r\n        node.closed = true;\r\n\r\n        // reached the end position\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            // skip this neighbor if it has been inspected before\r\n            if (neighbor.closed || neighbor.opened) {\r\n                continue;\r\n            }\r\n\r\n            openList.push(neighbor);\r\n            neighbor.opened = true;\r\n            neighbor.parent = node;\r\n        }\r\n    }\r\n    \r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BreadthFirstFinder;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Dijkstra path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction DijkstraFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nDijkstraFinder.prototype = new AStarFinder();\r\nDijkstraFinder.prototype.constructor = DijkstraFinder;\r\n\r\nmodule.exports = DijkstraFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BiBestFirstFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBiBestFirstFinder.prototype = new BiAStarFinder();\r\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\r\n\r\nmodule.exports = BiBestFirstFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Bi-directional Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiBreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        startOpenList = [], endOpenList = [],\r\n        neighbors, neighbor, node,\r\n        diagonalMovement = this.diagonalMovement,\r\n        BY_START = 0, BY_END = 1,\r\n        i, l;\r\n\r\n    // push the start and end nodes into the queues\r\n    startOpenList.push(startNode);\r\n    startNode.opened = true;\r\n    startNode.by = BY_START;\r\n\r\n    endOpenList.push(endNode);\r\n    endNode.opened = true;\r\n    endNode.by = BY_END;\r\n\r\n    // while both the queues are not empty\r\n    while (startOpenList.length && endOpenList.length) {\r\n\r\n        // expand start open list\r\n\r\n        node = startOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                // if this node has been inspected by the reversed search,\r\n                // then a path is found.\r\n                if (neighbor.by === BY_END) {\r\n                    return Util.biBacktrace(node, neighbor);\r\n                }\r\n                continue;\r\n            }\r\n            startOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_START;\r\n        }\r\n\r\n        // expand end open list\r\n\r\n        node = endOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                if (neighbor.by === BY_START) {\r\n                    return Util.biBacktrace(neighbor, node);\r\n                }\r\n                continue;\r\n            }\r\n            endOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_END;\r\n        }\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiBreadthFirstFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-directional Dijkstra path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiDijkstraFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nBiDijkstraFinder.prototype = new BiAStarFinder();\r\nBiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\r\n\r\nmodule.exports = BiDijkstraFinder;\r\n","var Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar Node       = require('../core/Node');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Iterative Deeping A Star (IDA*) path-finder.\r\n *\r\n * Recursion based on:\r\n *   http://www.apl.jhu.edu/~hall/AI-Programming/IDA-Star.html\r\n *\r\n * Path retracing based on:\r\n *  V. Nageshwara Rao, Vipin Kumar and K. Ramesh\r\n *  \"A Parallel Implementation of Iterative-Deeping-A*\", January 1987.\r\n *  ftp://ftp.cs.utexas.edu/.snapshot/hourly.1/pub/AI-Lab/tech-reports/UT-AI-TR-87-46.pdf\r\n *\r\n * @author Gerard Meier (www.gerardmeier.com)\r\n *\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n * @param {boolean} opt.trackRecursion Whether to track recursion for\r\n *     statistical purposes.\r\n * @param {number} opt.timeLimit Maximum execution time. Use <= 0 for infinite.\r\n */\r\nfunction IDAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.trackRecursion = opt.trackRecursion || false;\r\n    this.timeLimit = opt.timeLimit || Infinity; // Default: no time limit.\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    // admissible, it should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path. When an empty array is returned, either\r\n * no path is possible, or the maximum execution time is reached.\r\n *\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nIDAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    // Used for statistics:\r\n    var nodesVisited = 0;\r\n\r\n    // Execution time limitation:\r\n    var startTime = new Date().getTime();\r\n\r\n    // Heuristic helper:\r\n    var h = function(a, b) {\r\n        return this.heuristic(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\r\n    }.bind(this);\r\n\r\n    // Step cost from a to b:\r\n    var cost = function(a, b) {\r\n        return (a.x === b.x || a.y === b.y) ? 1 : Math.SQRT2;\r\n    };\r\n\r\n    /**\r\n     * IDA* search implementation.\r\n     *\r\n     * @param {Node} The node currently expanding from.\r\n     * @param {number} Cost to reach the given node.\r\n     * @param {number} Maximum search depth (cut-off value).\r\n     * @param {Array<Array<number>>} The found route.\r\n     * @param {number} Recursion depth.\r\n     *\r\n     * @return {Object} either a number with the new optimal cut-off depth,\r\n     * or a valid node instance, in which case a path was found.\r\n     */\r\n    var search = function(node, g, cutoff, route, depth) {\r\n        nodesVisited++;\r\n\r\n        // Enforce timelimit:\r\n        if (this.timeLimit > 0 &&\r\n            new Date().getTime() - startTime > this.timeLimit * 1000) {\r\n            // Enforced as \"path-not-found\".\r\n            return Infinity;\r\n        }\r\n\r\n        var f = g + h(node, end) * this.weight;\r\n\r\n        // We've searched too deep for this iteration.\r\n        if (f > cutoff) {\r\n            return f;\r\n        }\r\n\r\n        if (node == end) {\r\n            route[depth] = [node.x, node.y];\r\n            return node;\r\n        }\r\n\r\n        var min, t, k, neighbour;\r\n\r\n        var neighbours = grid.getNeighbors(node, this.diagonalMovement);\r\n\r\n        // Sort the neighbours, gives nicer paths. But, this deviates\r\n        // from the original algorithm - so I left it out.\r\n        //neighbours.sort(function(a, b){\r\n        //    return h(a, end) - h(b, end);\r\n        //});\r\n\r\n        \r\n        /*jshint -W084 *///Disable warning: Expected a conditional expression and instead saw an assignment\r\n        for (k = 0, min = Infinity; neighbour = neighbours[k]; ++k) {\r\n        /*jshint +W084 *///Enable warning: Expected a conditional expression and instead saw an assignment\r\n            if (this.trackRecursion) {\r\n                // Retain a copy for visualisation. Due to recursion, this\r\n                // node may be part of other paths too.\r\n                neighbour.retainCount = neighbour.retainCount + 1 || 1;\r\n\r\n                if(neighbour.tested !== true) {\r\n                    neighbour.tested = true;\r\n                }\r\n            }\r\n\r\n            t = search(neighbour, g + cost(node, neighbour), cutoff, route, depth + 1);\r\n\r\n            if (t instanceof Node) {\r\n                route[depth] = [node.x, node.y];\r\n\r\n                // For a typical A* linked list, this would work:\r\n                // neighbour.parent = node;\r\n                return t;\r\n            }\r\n\r\n            // Decrement count, then determine whether it's actually closed.\r\n            if (this.trackRecursion && (--neighbour.retainCount) === 0) {\r\n                neighbour.tested = false;\r\n            }\r\n\r\n            if (t < min) {\r\n                min = t;\r\n            }\r\n        }\r\n\r\n        return min;\r\n\r\n    }.bind(this);\r\n\r\n    // Node instance lookups:\r\n    var start = grid.getNodeAt(startX, startY);\r\n    var end   = grid.getNodeAt(endX, endY);\r\n\r\n    // Initial search depth, given the typical heuristic contraints,\r\n    // there should be no cheaper route possible.\r\n    var cutOff = h(start, end);\r\n\r\n    var j, route, t;\r\n\r\n    // With an overflow protection.\r\n    for (j = 0; true; ++j) {\r\n\r\n        route = [];\r\n\r\n        // Search till cut-off depth:\r\n        t = search(start, 0, cutOff, route, 0);\r\n\r\n        // Route not possible, or not found in time limit.\r\n        if (t === Infinity) {\r\n            return [];\r\n        }\r\n\r\n        // If t is a node, it's also the end node. Route is now\r\n        // populated with a valid path to the end node.\r\n        if (t instanceof Node) {\r\n            return route;\r\n        }\r\n\r\n        // Try again, this time with a deeper cut-off. The t score\r\n        // is the closest we got to the end node.\r\n        cutOff = t;\r\n    }\r\n\r\n    // This _should_ never to be reached.\r\n    return [];\r\n};\r\n\r\nmodule.exports = IDAStarFinder;\r\n","/**\r\n * @author aniero / https://github.com/aniero\r\n */\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\nvar JPFNeverMoveDiagonally = require('./JPFNeverMoveDiagonally');\r\nvar JPFAlwaysMoveDiagonally = require('./JPFAlwaysMoveDiagonally');\r\nvar JPFMoveDiagonallyIfNoObstacles = require('./JPFMoveDiagonallyIfNoObstacles');\r\nvar JPFMoveDiagonallyIfAtMostOneObstacle = require('./JPFMoveDiagonallyIfAtMostOneObstacle');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm\r\n * @param {Object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {DiagonalMovement} opt.diagonalMovement Condition under which diagonal\r\n *      movement will be allowed.\r\n */\r\nfunction JumpPointFinder(opt) {\r\n    opt = opt || {};\r\n    if (opt.diagonalMovement === DiagonalMovement.Never) {\r\n        return new JPFNeverMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.Always) {\r\n        return new JPFAlwaysMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        return new JPFMoveDiagonallyIfNoObstacles(opt);\r\n    } else {\r\n        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);\r\n    }\r\n}\r\n\r\nmodule.exports = JumpPointFinder;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm allowing only horizontal\r\n * or vertical movements.\r\n */\r\nfunction JPFNeverMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFNeverMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFNeverMoveDiagonally.prototype.constructor = JPFNeverMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFNeverMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    if (dx !== 0) {\r\n        if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n            (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else if (dy !== 0) {\r\n        if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n            (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        //When moving vertically, must check for horizontal jump points\r\n        if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Only horizontal and vertical movements are allowed\");\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFNeverMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        if (dx !== 0) {\r\n            if (grid.isWalkableAt(x, y - 1)) {\r\n                neighbors.push([x, y - 1]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + 1)) {\r\n                neighbors.push([x, y + 1]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if (grid.isWalkableAt(x - 1, y)) {\r\n                neighbors.push([x - 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + 1, y)) {\r\n                neighbors.push([x + 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Never);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFNeverMoveDiagonally;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which always moves\r\n * diagonally irrespective of the number of obstacles.\r\n */\r\nfunction JPFAlwaysMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFAlwaysMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFAlwaysMoveDiagonally.prototype.constructor = JPFAlwaysMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y + dy)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x + 1, y)) {\r\n                    neighbors.push([x + 1, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x - 1, y)) {\r\n                    neighbors.push([x - 1, y + dy]);\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y + 1)) {\r\n                    neighbors.push([x + dx, y + 1]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y - 1)) {\r\n                    neighbors.push([x + dx, y - 1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Always);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFAlwaysMoveDiagonally;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there are no obstacles.\r\n */\r\nfunction JPFMoveDiagonallyIfNoObstacles(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfNoObstacles.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfNoObstacles.prototype.constructor = JPFMoveDiagonallyIfNoObstacles;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        // if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            // (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            // return [x, y];\r\n        // }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if (dx !== 0) {\r\n            if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n                (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n                (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n                return [x, y];\r\n            }\r\n            // When moving vertically, must check for horizontal jump points\r\n            // if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n                // return [x, y];\r\n            // }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            var isNextWalkable;\r\n            if (dx !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x + dx, y);\r\n                var isTopWalkable = grid.isWalkableAt(x, y + 1);\r\n                var isBottomWalkable = grid.isWalkableAt(x, y - 1);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (isTopWalkable) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (isBottomWalkable) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n                if (isTopWalkable) {\r\n                    neighbors.push([x, y + 1]);\r\n                }\r\n                if (isBottomWalkable) {\r\n                    neighbors.push([x, y - 1]);\r\n                }\r\n            }\r\n            else if (dy !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x, y + dy);\r\n                var isRightWalkable = grid.isWalkableAt(x + 1, y);\r\n                var isLeftWalkable = grid.isWalkableAt(x - 1, y);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (isRightWalkable) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (isLeftWalkable) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n                if (isRightWalkable) {\r\n                    neighbors.push([x + 1, y]);\r\n                }\r\n                if (isLeftWalkable) {\r\n                    neighbors.push([x - 1, y]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.OnlyWhenNoObstacles);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfNoObstacles;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there is at most one obstacle.\r\n */\r\nfunction JPFMoveDiagonallyIfAtMostOneObstacle(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) || grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) || grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (!grid.isWalkableAt(x + 1, y)) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x - 1, y)) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (!grid.isWalkableAt(x, y + 1)) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x, y - 1)) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.IfAtMostOneObstacle);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n","import { grid } from \"../lib/canvas\";\nimport sample from \"lodash.sample\";\n\nexport const CARDINAL = [\n  { x: 0, y: 0 }, // N\n  { x: 1, y: 0 }, // E\n  { x: 0, y: 1 }, // S\n  { x: -1, y: 0 }, // W\n];\n\nexport const DIAGONAL = [\n  { x: 1, y: -1 }, // NE\n  { x: 1, y: 1 }, // SE\n  { x: -1, y: 1 }, // SW\n  { x: -1, y: -1 }, // NW\n];\n\nexport const ALL = [...CARDINAL, ...DIAGONAL];\n\nexport const toCell = (cellOrId) => {\n  let cell = cellOrId;\n  if (typeof cell === \"string\") cell = idToCell(cell);\n\n  return cell;\n};\n\nexport const toLocId = (cellOrId) => {\n  let locId = cellOrId;\n  if (typeof cell !== \"string\") locId = cellToId(locId);\n\n  return locId;\n};\n\nconst insideCircle = (center, tile, radius) => {\n  const dx = center.x - tile.x;\n  const dy = center.y - tile.y;\n  const distance_squared = dx * dx + dy * dy;\n  return distance_squared <= radius * radius;\n}\n\nexport const circle = (center, radius) => {\n  const diameter = radius % 1 ? radius * 2 : radius * 2 + 1;\n  const top = center.y - radius;\n  const bottom = center.y + radius;\n  const left = center.x - radius;\n  const right = center.x + radius;\n\n  const locsIds = [];\n\n  for (let y = top; y <= bottom; y++) {\n    for (let x = left; x <= right; x++) {\n      const cx = Math.ceil(x);\n      const cy = Math.ceil(y);\n      if (insideCircle(center, { x: cx, y: cy }, radius)) {\n        locsIds.push(`${cx},${cy}`);\n      }\n    }\n  }\n\n  return locsIds;\n}\n\nexport const rectangle = ({ x, y, z, width, height, hasWalls }, tileProps) => {\n  const tiles = {};\n\n  const x1 = x;\n  const x2 = x + width - 1;\n  const y1 = y;\n  const y2 = y + height - 1;\n  if (hasWalls) {\n    for (let yi = y1 + 1; yi <= y2 - 1; yi++) {\n      for (let xi = x1 + 1; xi <= x2 - 1; xi++) {\n        tiles[`${xi},${yi},${z}`] = { x: xi, y: yi, z, ...tileProps };\n      }\n    }\n  } else {\n    for (let yi = y1; yi <= y2; yi++) {\n      for (let xi = x1; xi <= x2; xi++) {\n        tiles[`${xi},${yi},${z}`] = { x: xi, y: yi, z, ...tileProps };\n      }\n    }\n  }\n\n  const center = {\n    x: Math.round((x1 + x2) / 2),\n    y: Math.round((y1 + y2) / 2),\n    z,\n  };\n\n  return { x1, x2, y1, y2, center, hasWalls, tiles };\n};\n\nexport const rectsIntersect = (rect1, rect2) => {\n  return (\n    rect1.x1 <= rect2.x2 &&\n    rect1.x2 >= rect2.x1 &&\n    rect1.y1 <= rect2.y2 &&\n    rect1.y2 >= rect2.y1\n  );\n};\n\nexport const distance = (cell1, cell2) => {\n  const x = Math.pow(cell2.x - cell1.x, 2);\n  const y = Math.pow(cell2.y - cell1.y, 2);\n  return Math.floor(Math.sqrt(x + y));\n};\n\nexport const idToCell = (id) => {\n  const coords = id.split(\",\");\n  return { x: parseInt(coords[0], 10), y: parseInt(coords[1], 10), z: parseInt(coords[2], 10) };\n};\n\nexport const cellToId = ({ x, y, z }) => `${x},${y},${z}`;\n\nexport const isOnMapEdge = (x, y) => {\n  const { width, height, x: mapX, y: mapY } = grid.map;\n\n  if (x === mapX) return true; // west edge\n  if (y === mapY) return true; // north edge\n  if (x === mapX + width - 1) return true; // east edge\n  if (y === mapY + height - 1) return true; // south edge\n\n  return false;\n};\n\nexport const getNeighbors = ({ x, y }, direction = CARDINAL) => {\n  const points = [];\n  for (let dir of direction) {\n    let candidate = {\n      x: x + dir.x,\n      y: y + dir.y,\n    };\n    if (\n      candidate.x >= 0 &&\n      candidate.x < grid.width &&\n      candidate.y >= 0 &&\n      candidate.y < grid.height\n    ) {\n      points.push(candidate);\n    }\n  }\n  return points;\n};\n\nexport const getNeighborIds = (cellOrId, direction = \"CARDINAL\") => {\n  let cell = toCell(cellOrId);\n\n  if (direction === \"CARDINAL\") {\n    return getNeighbors(cell, CARDINAL).map(cellToId);\n  }\n\n  if (direction === \"DIAGONAL\") {\n    return getNeighbors(cell, DIAGONAL).map(cellToId);\n  }\n\n  if (direction === \"ALL\") {\n    return [\n      ...getNeighbors(cell, CARDINAL).map(cellToId),\n      ...getNeighbors(cell, DIAGONAL).map(cellToId),\n    ];\n  }\n};\n\nexport const isNeighbor = (a, b) => {\n  let posA = a;\n  if (typeof posA === \"string\") {\n    posA = idToCell(a);\n  }\n\n  let posB = b;\n  if (typeof posB === \"string\") {\n    posB = idToCell(b);\n  }\n\n  const { x: ax, y: ay } = posA;\n  const { x: bx, y: by } = posB;\n\n  if (\n    (ax - bx === 1 && ay - by === 0) ||\n    (ax - bx === 0 && ay - by === -1) ||\n    (ax - bx === -1 && ay - by === 0) ||\n    (ax - bx === 0 && ay - by === 1)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport const randomNeighbor = (startX, startY) => {\n  const directoin = sample(CARDINAL);\n  const x = startX + direction.x;\n  const y = startY + direction.y;\n  return { x, y };\n};\n\nexport const getNeighbor = (x, y, dir) => {\n  const dirMap = { N: 0, E: 1, S: 2, W: 3 };\n  const direction = CARDINAL[dirMap[dir]];\n  return {\n    x: x + direction.x,\n    y: y + direction.y,\n  };\n};\n\nexport const getDirection = (a, b) => {\n  const cellA = toCell(a);\n  const cellB = toCell(b);\n\n  const { x: ax, y: ay } = cellA;\n  const { x: bx, y: by } = cellB;\n\n  let dir;\n\n  if (ax - bx === 1 && ay - by === 0) dir = \"→\";\n  if (ax - bx === 0 && ay - by === -1) dir = \"↑\";\n  if (ax - bx === -1 && ay - by === 0) dir = \"←\";\n  if (ax - bx === 1 && ay - by === 1) dir = \"↓\";\n\n  return dir;\n}","import { rectangle } from \"./grid\";\n\nconst pixelRatio = window.devicePixelRatio || 1;\nconst canvas = document.querySelector(\"#canvas\");\nconst ctx = canvas.getContext(\"2d\");\n\nexport const grid = {\n  width: 100,\n  height: 35,\n\n  menu: {\n    width: 100,\n    height: 1,\n    x: 0,\n    y: 33,\n  },\n\n  map: {\n    width: 79,\n    height: 29,\n    x: 21,\n    y: 3,\n  },\n\n  messageLog: {\n    width: 79,\n    height: 3,\n    x: 21,\n    y: 0,\n  },\n\n  playerHud: {\n    width: 20,\n    height: 34,\n    x: 0,\n    y: 0,\n  },\n\n  infoBar: {\n    width: 79,\n    height: 3,\n    x: 21,\n    y: 32,\n  },\n\n  inventory: {\n    width: 37,\n    height: 28,\n    x: 21,\n    y: 4,\n  },\n};\n\nconst lineHeight = 1.2;\n\nlet calculatedFontSize = window.innerWidth / grid.width;\nlet cellWidth = calculatedFontSize * pixelRatio;\nlet cellHeight = calculatedFontSize * lineHeight * pixelRatio;\nlet fontSize = calculatedFontSize * pixelRatio;\n\ncanvas.style.cssText = `\nwidth: ${calculatedFontSize * grid.width};\nheight:${calculatedFontSize * lineHeight * grid.height};\n`\ncanvas.width = cellWidth * grid.width;\ncanvas.height = cellHeight * grid.height;\n\nctx.font = `normal ${fontSize}px 'Fira Code'`;\nctx.textAlign = \"center\";\nctx.textBaseline = \"middle\";\n\nconst drawBackground = ({ color, position }) => {\n  if (color === \"transparent\") return;\n\n  ctx.fillStyle = color;\n\n  ctx.fillRect(\n    position.x * cellWidth,\n    position.y * cellHeight,\n    cellWidth,\n    cellHeight,\n  );\n};\n\nexport const drawCell = (entity, options = {}) => {\n  const char = options.char || entity.appearance.char;\n  const background = options.background || entity.appearance.background;\n  const color = options.color || entity.appearance.color;\n  const position = entity.position;\n\n  drawBackground({ color: background, position });\n  drawChar({ char, color, position });\n};\n\nexport const drawChar = ({ char, color, position }) => {\n  ctx.fillStyle = color;\n  ctx.fillText(\n    char,\n    position.x * cellWidth + cellWidth / 2,\n    position.y * cellHeight + cellHeight / 2,\n  )\n};\n\nexport const drawText = (template) => {\n  const textToRender = template.text;\n\n  textToRender.split(\"\").forEach((char, index) => {\n    const options = { ...template };\n    const character = {\n      appearance: {\n        char,\n        background: options.background,\n        color: options.color,\n      },\n      position: {\n        x: index + options.x,\n        y: options.y,\n      },\n    };\n\n    delete options.x;\n    delete options.y;\n\n    drawCell(character, options);\n  })\n}\n\nexport const drawRect = (x, y, width, height, color) => {\n  const rect = rectangle({ x, y, width, height });\n\n  Object.values(rect.tiles).forEach((position) => {\n    drawBackground({ color, position });\n  });\n};\n\nexport const clearCanvas = (x, y, w, h) => {\n  const posX = x * cellWidth;\n  const posY = y * cellHeight;\n\n  const width = cellWidth * w;\n  const height = cellHeight * h;\n\n  ctx.clearRect(posX, posY, width, height);\n};\n\nexport const pxToCell = (ev) => {\n  const bounds = canvas.getBoundingClientRect();\n  const relativeX = ev.clientX - bounds.left;\n  const relativeY = ev.clientY - bounds.top;\n  const colPos = Math.trunc((relativeX / cellWidth) * pixelRatio);\n  const rowPos = Math.trunc((relativeY / cellHeight) * pixelRatio);\n\n  return [colPos, rowPos];\n}","import { Engine } from \"geotic\";\nimport {\n  Ai,\n  Appearance,\n  Description,\n  Defense,\n  Health,\n  IsBlocking,\n  IsInFov,\n  IsOpaque,\n  IsRevealed,\n  Layer100,\n  Layer300,\n  Layer400,\n  Move,\n  Position,\n  Power,\n  IsDead,\n  IsPickup,\n  Inventory,\n  ActiveEffects,\n  Effects,\n  Animate,\n  RequiresTarget,\n  Target,\n  TargetingItem,\n  Paralyzed,\n} from \"./components\";\n\nimport { Being, Tile, Goblin, Player, Wall, Floor, Item, HealthPotion, ScrollLightning, ScrollParalyze, ScrollFireball, StairsUp, StairsDown } from \"./prefabs\";\n\nexport const ecs = new Engine();\n\nexport const world = ecs.createWorld();\n\n// all Components must be `registered` by the engine\necs.registerComponent(ActiveEffects);\necs.registerComponent(Animate);\necs.registerComponent(Ai);\necs.registerComponent(Appearance);\necs.registerComponent(Description);\necs.registerComponent(Defense);\necs.registerComponent(Effects);\necs.registerComponent(Health);\necs.registerComponent(Inventory);\necs.registerComponent(IsBlocking);\necs.registerComponent(IsDead);\necs.registerComponent(IsInFov);\necs.registerComponent(IsOpaque);\necs.registerComponent(IsPickup);\necs.registerComponent(IsRevealed);\necs.registerComponent(Layer100);\necs.registerComponent(Layer300);\necs.registerComponent(Layer400);\necs.registerComponent(Move);\necs.registerComponent(Paralyzed);\necs.registerComponent(Position);\necs.registerComponent(Power);\necs.registerComponent(RequiresTarget);\necs.registerComponent(Target);\necs.registerComponent(TargetingItem);\n\n// register \"base\" prefabs first!\necs.registerPrefab(Tile);\necs.registerPrefab(Being);\necs.registerPrefab(Item);\n\necs.registerPrefab(HealthPotion);\necs.registerPrefab(Wall);\necs.registerPrefab(Floor);\necs.registerPrefab(Goblin);\necs.registerPrefab(Player);\necs.registerPrefab(ScrollFireball);\necs.registerPrefab(ScrollLightning);\necs.registerPrefab(ScrollParalyze);\necs.registerPrefab(StairsUp);\necs.registerPrefab(StairsDown);\n\nexport default world;\n","export const Tile = {\n  name: \"Tile\",\n  components: [\n    { type: \"Appearance\", },\n    { type: \"Description\" },\n    { type: \"Layer100\" },\n  ],\n};\n\nexport const Being = {\n  name: \"Being\",\n  components: [\n    { type: \"Appearance\", },\n    { type: \"Defense\" },\n    { type: \"Description\" },\n    { type: \"Health\" },\n    { type: \"IsBlocking\" },\n    { type: \"Layer400\" },\n    { type: \"Power\" },\n  ],\n};\n\n// Complex\nexport const Wall = {\n  name: \"Wall\",\n  inherit: [\"Tile\"],\n  components: [\n    { type: \"IsBlocking\", },\n    { type: \"IsOpaque\" },\n    {\n      type: \"Appearance\",\n      properties: { char: \"#\", color: \"#AAA\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"wall\" },\n    },\n  ],\n};\n\nexport const Floor = {\n  name: \"Floor\",\n  inherit: [\"Tile\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"•\", color: \"#555\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"floor\" },\n    },\n  ],\n};\n\nexport const Player = {\n  name: \"Player\",\n  inherit: [\"Being\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"@\", color: \"#FFF\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"You\" },\n    },\n    {\n      type: \"Health\", properties: { current: 10, max: 20 },\n    },\n    { type: \"Inventory\" },\n  ],\n};\n\nexport const Goblin = {\n  name: \"Goblin\",\n  inherit: [\"Being\"],\n  components: [\n    { type: \"Ai\" },\n    {\n      type: \"Appearance\",\n      properties: { char: \"g\", color: \"green\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"goblin\" },\n    },\n  ],\n};\n\nexport const Item = {\n  name: \"Item\",\n  components: [\n    { type: \"Appearance\" },\n    { type: \"Description\" },\n    { type: \"Layer300\" },\n    { type: \"IsPickup\" },\n  ],\n};\n\nexport const HealthPotion = {\n  name: \"HealthPotion\",\n  inherit: [\"Item\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"!\", color: \"#DAA520\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"health potion\" },\n    },\n    {\n      type: \"Effects\",\n      properties: {\n        component: \"health\",\n        delta: 5,\n        animate: { color: \"#ff0000\", char: \"♥\" },\n      },\n    },\n  ],\n};\n\nexport const ScrollLightning = {\n  name: \"ScrollLightning\",\n  inherit: [\"Item\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"♪\", color: \"#DAA520\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"scroll of lightning\" },\n    },\n    {\n      type: \"Effects\",\n      properties: {\n        animate: { color: \"#F7FF00\" },\n        events: [\n          {\n            name: \"take-damage\",\n            args: { amount: 25 },\n          },\n        ],\n      },\n    },\n    {\n      type: \"RequiresTarget\",\n      properties: {\n        acquired: \"RANDOM\",\n      },\n    },\n  ],\n};\n\nexport const ScrollParalyze = {\n  name: \"ScrollParalyze\",\n  inherit: [\"Item\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"♪\", color: \"#DAA520\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"scroll of paralyze\" },\n    },\n    {\n      type: \"Effects\",\n      properties: {\n        animate: { color: \"#FFB0B0\" },\n        addComponents: [\n          {\n            name: \"Paralyzed\",\n            properties: {},\n          },\n        ],\n        duration: 10,\n      },\n    },\n    {\n      type: \"RequiresTarget\",\n      properties: {\n        acquired: \"MANUAL\",\n      },\n    },\n  ],\n};\n\nexport const ScrollFireball = {\n  name: \"ScrollFireball\",\n  inherit: [\"Item\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"♪\", color: \"#DAA520\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"scroll of fireball\" },\n    },\n    {\n      type: \"Effects\",\n      properties: {\n        animate: { color: \"#FFA200\", char: \"^\" },\n        events: [\n          {\n            name: \"take-damage\",\n            args: { amount: 25 },\n          },\n        ],\n      },\n    },\n    {\n      type: \"RequiresTarget\",\n      properties: {\n        acquired: \"MANUAL\",\n        aoeRange: 3,\n      },\n    },\n  ],\n};\n\nexport const StairsUp = {\n  name: \"StairsUp\",\n  inherit: [\"Tile\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \"<\", color: \"#AAA\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"set of stairs leading up\" },\n    },\n  ],\n};\n\nexport const StairsDown = {\n  name: \"StairsDown\",\n  inherit: [\"Tile\"],\n  components: [\n    {\n      type: \"Appearance\",\n      properties: { char: \">\", color: \"#AAA\" },\n    },\n    {\n      type: \"Description\",\n      properties: { name: \"set of stairs leading down\" },\n    },\n  ]\n}","import random from \"lodash.random\";\nimport world from \"../state/ecs\";\nimport { rectangle, rectsIntersect } from \"./grid\";;\n\nimport {\n  Position,\n} from \"../state/components\";\nimport { times } from \"lodash\";\n\nfunction digHorizontalPassage(x1, x2, y, z) {\n  const tiles = {};\n  const start = Math.min(x1, x2);\n  const end = Math.max(x1, x2) + 1;\n  let x = start;\n\n  while (x < end) {\n    tiles[`${x},${y},${z}`] = { x, y, z, sprite: \"FLOOR\" };\n    x++;\n  }\n\n  return tiles;\n}\n\nfunction digVerticalPassage(y1, y2, x, z) {\n  const tiles = {};\n  const start = Math.min(y1, y2);\n  const end = Math.max(y1, y2) + 1;\n  let y = start;\n\n  while (y < end) {\n    tiles[`${x},${y},${z}`] = { x, y, z, sprite: \"FLOOR\" };\n    y++;\n  }\n\n  return tiles;\n}\n\nexport const createDungeon = ({\n  x,\n  y,\n  z,\n  width,\n  height,\n  minRoomSize = 6,\n  maxRoomSize = 12,\n  maxRoomCount = 30,\n}) => {\n  const dungeon = rectangle(\n    { x, y, z, width, height},\n    {\n      sprite: \"WALL\",\n    }\n  );\n\n  const rooms = [];\n  let roomTiles = {};\n\n  times(maxRoomCount, () => {\n    let rw = random(minRoomSize, maxRoomSize);\n    let rh = random(minRoomSize, maxRoomSize);\n    let rx = random(x, width + x - rw);\n    let ry = random(y, height + y - rh);\n\n    // create a candidate room\n    const candidate = rectangle(\n      { x: rx, y: ry, z, width: rw, height: rh, hasWalls: true },\n      { sprite: \"FLOOR\" }\n    );\n\n    if (!rooms.some((room) => rectsIntersect(room, candidate))) {\n      rooms.push(candidate);\n      roomTiles = { ...roomTiles, ...candidate.tiles };\n    }\n  });\n\n  let prevRoom = null;\n  let passageTiles;\n\n  for (let room of rooms) {\n    if (prevRoom) {\n      const prev = prevRoom.center;\n      const curr = room.center;\n\n      passageTiles = {\n        ...passageTiles,\n        ...digHorizontalPassage(prev.x, curr.x, curr.y, z),\n        ...digVerticalPassage(prev.y, curr.y, prev.x, z),\n      };\n    }\n    prevRoom = room;\n  }\n\n  dungeon.rooms = rooms;\n  dungeon.tiles = { ...dungeon.tiles, ...roomTiles, ...passageTiles };\n\n  // create tile entities\n  Object.keys(dungeon.tiles).forEach((key) => {\n    const tile = dungeon.tiles[key];\n\n    if (tile.sprite === \"WALL\") {\n      world.createPrefab(\"Wall\").add(Position, { ...dungeon.tiles[key], z });\n    }\n\n    if (tile.sprite === \"FLOOR\") {\n      world.createPrefab(\"Floor\").add(Position, { ...dungeon.tiles[key], z });\n    }\n  });\n\n  return dungeon;\n}","import PF from \"pathfinding\";\nimport { some, times } from \"lodash\";\nimport { world } from \"../state/ecs\";\nimport cache, { readCache, readCacheSet } from \"../state/cache\";\nimport { toCell } from \"./grid\";\nimport { grid } from \"./canvas\";\n\nconst baseMatrix = [];\ntimes(grid.height, () => baseMatrix.push(new Array(grid.width).fill(0)));\n\nexport const aStar = (start, goal) => {\n  const matrix = JSON.parse(JSON.stringify(baseMatrix));\n\n  const locIds = Object.keys(readCache(\"entitiesAtLocation\"));\n\n  locIds.forEach((locId) => {\n    const cell = toCell(locId);\n    if (cell.z === readCache(\"z\")) {\n      if (\n        some([...readCacheSet(\"entitiesAtLocation\", locId)], (eId) => {\n          return world.getEntity(eId).isBlocking;\n        })\n      ) {\n        const cell = toCell(locId);\n\n        matrix[cell.y][cell.x] = 1;\n      }\n    }\n  });\n\n  matrix[start.y][start.x] = 0;\n  matrix[goal.y][goal.x] = 0;\n\n  const grid = new PF.Grid(matrix);\n  const finder = new PF.AStarFinder({\n    allowDiagonal: false,\n    dontCrossCorners: true,\n  });\n\n  const path = finder.findPath(start.x, start.y, goal.x, goal.y, grid);\n\n  return path;\n};\n","import world from \"../state/ecs\";\nimport { Ai, Description, IsInFov, Move } from \"../state/components\";\nimport { aStar } from \"../lib/pathfinding\";\nimport { readCache } from \"../state/cache\";\n\nconst aiEntities = world.createQuery({\n  all: [Ai, Description],\n});\n\nconst moveToTarget = (entity, target) => {\n  const path = aStar(entity.position, target.position);\n  if (path.length) {\n    const newLoc = path[1];\n    entity.add(Move, { x: newLoc[0], y: newLoc[1], z: readCache(\"z\"), relative: false });\n  }\n}\nexport const ai = (player) => {\n  aiEntities.get().forEach((entity) => {\n    if (entity.has(IsInFov)) {\n      moveToTarget(entity, player);\n    }\n  });\n};","import { distance, idToCell } from \"./grid\";\n\nconst octantTransforms = [\n  { xx: 1, xy: 0, yx: 0, yy: 1 },\n  { xx: 1, xy: 0, yx: 0, yy: -1 },\n  { xx: -1, xy: 0, yx: 0, yy: 1 },\n  { xx: -1, xy: 0, yx: 0, yy: -1 },\n  { xx: 0, xy: 1, yx: 1, yy: 0 },\n  { xx: 0, xy: 1, yx: -1, yy: 0 },\n  { xx: 0, xy: -1, yx: 1, yy: 0 },\n  { xx: 0, xy: -1, yx: -1, yy: 0 },\n];\n\n// width: width of map (or visible map?)\n// height: height of map (or visible map?)\nexport default function createFOV(\n  opaqueEntities,\n  width,\n  height,\n  originX,\n  originY,\n  originZ,\n  radius\n) {\n  const visible = new Set();\n\n  const blockingLocations = new Set();\n  opaqueEntities\n    .get()\n    .forEach((x) => {\n      if (x.position.z === originZ) {\n        blockingLocations.add(`${x.position.x},${x.position.y},${x.position.z}`);\n      }\n    });\n\n  const isOpaque = (x, y) => {\n    const locId = `${x},${y},${originZ}`;\n    return !!blockingLocations.has(locId);\n  };\n  const reveal = (x, y) => {\n    return visible.add(`${x},${y},${originZ}`);\n  };\n\n  function castShadows(originX, originY, row, start, end, transform, radius) {\n    let newStart = 0;\n    if (start < end) return;\n\n    let blocked = false;\n\n    for (let distance = row; distance < radius && !blocked; distance++) {\n      let deltaY = -distance;\n      for (let deltaX = -distance; deltaX <= 0; deltaX++) {\n        let currentX = originX + deltaX * transform.xx + deltaY * transform.xy;\n        let currentY = originY + deltaX * transform.yx + deltaY * transform.yy;\n\n        let leftSlope = (deltaX - 0.5) / (deltaY + 0.5);\n        let rightSlope = (deltaX + 0.5) / (deltaY - 0.5);\n\n        if (\n          !(\n            currentX >= 0 &&\n            currentY >= 0 &&\n            currentX < width &&\n            currentY < height\n          ) ||\n          start < rightSlope\n        ) {\n          continue;\n        } else if (end > leftSlope) {\n          break;\n        }\n\n        if (Math.sqrt(deltaX * deltaX + deltaY * deltaY) <= radius) {\n          reveal(currentX, currentY);\n        }\n\n        if (blocked) {\n          if (isOpaque(currentX, currentY)) {\n            newStart = rightSlope;\n            continue;\n          } else {\n            blocked = false;\n            start = newStart;\n          }\n        } else {\n          if (isOpaque(currentX, currentY) && distance < radius) {\n            blocked = true;\n            castShadows(\n              originX,\n              originY,\n              distance + 1,\n              start,\n              leftSlope,\n              transform,\n              radius\n            );\n            newStart = rightSlope;\n          }\n        }\n      }\n    }\n  }\n\n  reveal(originX, originY);\n  for (let octant of octantTransforms) {\n    castShadows(originX, originY, 1, 1, 0, octant, radius);\n  }\n\n  return {\n    fov: visible,\n    distance: [...visible].reduce((acc, val) => {\n      const cell = idToCell(val);\n      acc[val] = distance({ x: originX, y: originY }, { x: cell.x, y: cell.y });\n      return acc;\n    }, {}),\n  };\n}","import { readCache, readCacheSet } from \"../state/cache\";\nimport ecs, { world } from \"../state/ecs\";\nimport { grid } from \"../lib/canvas\";\nimport createFOV from \"../lib/fov\";\nimport { IsInFov, IsOpaque, IsRevealed } from \"../state/components\";\n\nconst inFovEntities = ecs.createQuery({\n  all: [IsInFov],\n});\n\nconst opaqueEntities = ecs.createQuery({\n  all: [IsOpaque],\n});\n\nexport const fov = (origin) => {\n  const { width, height } = grid;\n\n  const originX = origin.position.x;\n  const originY = origin.position.y;\n\n  const FOV = createFOV(opaqueEntities, width, height, originX, originY, readCache(\"z\"), 10);\n\n  // clear out stale fov\n  inFovEntities.get().forEach((x) => { x.remove(x.isInFov) });\n\n  FOV.fov.forEach((locId) => {\n    const entitiesAtLoc = readCacheSet(\"entitiesAtLocation\", locId);\n\n    if (entitiesAtLoc) {\n      entitiesAtLoc.forEach((eId) => {\n        const entity = world.getEntity(eId);\n        if (!entity) {\n          return;\n        }\n        entity.add(IsInFov);\n\n        if (!entity.has(IsRevealed)) {\n          entity.add(IsRevealed);\n        }\n      });\n    }\n  });\n};","import world from \"../state/ecs\";\nimport { addCacheSet, deleteCacheSet, readCacheSet } from \"../state/cache\";\nimport { grid } from \"../lib/canvas\";\nimport { Ai, Defense, Health, IsDead, Layer300, Move, Paralyzed, Position } from \"../state/components\";\nimport { addLog } from \"..\";\n\nconst movableEntities = world.createQuery({\n  all: [Move],\n});\n\nconst attack = (entity, target) => {\n  const damage = entity.power.current - target.defense.current;\n  target.fireEvent(\"take-damage\", { amount: damage });\n\n  if (target.health.current <= 0) {\n    return addLog(\n      `${entity.description.name} kicked a ${target.description.name} for ${damage} damage and killed it!`\n    );\n  }\n\n  addLog(`${entity.description.name} kicked a ${target.description.name} for ${damage} damage!`);\n};\n\nexport const movement = () => {\n  movableEntities.get().forEach((entity) => {\n    if (entity.has(Paralyzed)) {\n      return entity.remove(entity.move);\n    }\n\n    let mx = entity.move.x;\n    let my = entity.move.y;\n    let mz = entity.move.z;\n\n    if (entity.move.relative) {\n      mx = entity.position.x + entity.move.x;\n      my = entity.position.y + entity.move.y;\n    }\n\n    // this is where we will run any checks to see if entity can move to new location\n    // observe map boundaries\n    mx = Math.min(grid.map.width + grid.map.x - 1, Math.max(21, mx));\n    my = Math.min(grid.map.height + grid.map.y - 1, Math.max(3, my));\n\n    // check for blockers\n    const blockers = [];\n    // read from cache\n    const entitiesAtLoc = readCacheSet(\"entitiesAtLocation\", `${mx},${my},${mz}`);\n    for (const eId of entitiesAtLoc) {\n      if (world.getEntity(eId).isBlocking) {\n        blockers.push(eId);\n      }\n    }\n    if (blockers.length) {\n      blockers.forEach((eId) => {\n        const target = world.getEntity(eId);\n        if (target.has(Health) && target.has(Defense)) {\n          attack(entity, target);\n        } else {\n          addLog(\n            `${entity.description.name} bump into a ${target.description.name}`\n          )\n        }\n      });\n\n      entity.remove(entity.move);\n      return;\n    }\n\n    deleteCacheSet(\n      \"entitiesAtLocation\",\n      `${entity.position.x},${entity.position.y}`,\n      entity.id\n    );\n    addCacheSet(\"entitiesAtLocation\", `${mx},${my}`, entity.id);\n\n    entity.remove(entity.position);\n    entity.add(Position, { x: mx, y: my, z: mz });\n\n    entity.remove(entity.move);\n  });\n};","import some from \"lodash.some\";\nimport throttle from \"lodash.throttle\";\nimport world from \"../state/ecs\";\nimport {\n  Appearance,\n  IsInFov,\n  IsRevealed,\n  Layer100,\n  Layer300,\n  Layer400,\n  Position\n} from \"../state/components\";\nimport { clearCanvas, drawCell, drawRect, drawText, grid, pxToCell } from \"../lib/canvas\";\nimport { toLocId } from \"../lib/grid\";\nimport { readCache, readCacheSet } from \"../state/cache\";\nimport { gameState, messageLog, selectedInventoryIndex } from \"..\";\n\nconst layer100Entities = world.createQuery({\n  all: [Position, Appearance, Layer100],\n  any: [IsInFov, IsRevealed],\n});\n\nconst layer300Entities = world.createQuery({\n  all: [Position, Appearance, Layer300],\n  any: [IsInFov, IsRevealed],\n});\n\nconst layer400Entities = world.createQuery({\n  all: [Position, Appearance, Layer400, IsInFov],\n});\n\nconst clearMap = () => {\n  clearCanvas(grid.map.x - 1, grid.map.y, grid.map.width + 1, grid.map.height);\n};\n\nconst renderMap = () => {\n  clearMap();\n\n  layer100Entities.get().forEach((entity) => {\n    if (entity.position.z !== readCache(\"z\")) return;\n\n    if (entity.isInFov) {\n      drawCell(entity);\n    } else {\n      drawCell(entity, { color: \"#333\" });\n    }\n  });\n\n  layer300Entities.get().forEach((entity) => {\n    if (entity.position.z !== readCache(\"z\")) return;\n\n    if (entity.isInFov) {\n      drawCell(entity);\n    } else {\n      drawCell(entity, { color: \"#333\" });\n    }\n  });\n\n  layer400Entities.get().forEach((entity) => {\n    if (entity.position.z !== readCache(\"z\")) return;\n\n    if (entity.isInFov) {\n      drawCell(entity);\n    } else {\n      drawCell(entity, { color: \"#100\" });\n    }\n  });\n};\n\nconst clearPlayerHud = () => {\n  clearCanvas(\n    grid.playerHud.x,\n    grid.playerHud.y,\n    grid.playerHud.width + 1,\n    grid.playerHud.height,\n  );\n};\n\nconst renderPlayerHud = (player) => {\n  clearPlayerHud();\n\n  drawText({\n    text: `${player.appearance.char} ${player.description.name}`,\n    background: `${player.appearance.background}`,\n    color: `${player.appearance.color}`,\n    x: grid.playerHud.x,\n    y: grid.playerHud.y,\n  });\n\n  drawText({\n    text: \"♥\".repeat(grid.playerHud.width),\n    background: \"black\",\n    color: \"#333\",\n    x: grid.playerHud.x,\n    y: grid.playerHud.y + 1,\n  });\n\n  drawText({\n    text: `Depth: ${Math.abs(readCache(\"z\"))}`,\n    background: \"black\",\n    color: \"#666\",\n    x: grid.playerHud.x,\n    y: grid.playerHud.y + 2,\n  });\n\n  const hp = player.health.current / player.health.max;\n\n  if (hp > 0) {\n    drawText({\n      text: \"♥\".repeat(hp * grid.playerHud.width),\n      background: \"black\",\n      color: \"red\",\n      x: grid.playerHud.x,\n      y: grid.playerHud.y + 1,\n    })\n  }\n};\n\nconst clearMessageLog = () => {\n  clearCanvas(\n    grid.messageLog.x,\n    grid.messageLog.y,\n    grid.messageLog.width + 1,\n    grid.messageLog.height\n  );\n};\n\nconst renderMessageLog = () => {\n  clearMessageLog();\n\n  drawText({\n    text: messageLog[2],\n    background: \"#000\",\n    color: \"#666\",\n    x: grid.messageLog.x,\n    y: grid.messageLog.y,\n  });\n\n  drawText({\n    text: messageLog[1],\n    background: \"#000\",\n    color: \"#aaa\",\n    x: grid.messageLog.x,\n    y: grid.messageLog.y + 1,\n  });\n\n  drawText({\n    text: messageLog[0],\n    background: \"#000\",\n    color: \"#fff\",\n    x: grid.messageLog.x,\n    y: grid.messageLog.y + 2,\n  });\n};\n\nconst clearInfoBar = () => {\n  drawText({\n    text: ` `.repeat(grid.infoBar.width),\n    x: grid.infoBar.x,\n    y: grid.infoBar.y,\n    background: \"black\",\n  });\n};\n\nconst renderInfoBar = (mPos) => {\n  clearInfoBar();\n\n  const { x, y, z } = mPos;\n  const locId = toLocId({ x, y, z });\n\n  // XXX: added (|| [])\n  const esAtLoc = readCacheSet(\"entitiesAtLocation\", locId) || [];\n  const entitiesAtLoc = [...esAtLoc];\n\n  if (entitiesAtLoc) {\n    if (some(entitiesAtLoc, (eId) => world.getEntity(eId).isRevealed)) {\n      drawCell({\n        appearance: {\n          char: \"\",\n          background: \"rgba(255, 255, 255, 0.5)\",\n        },\n        position: { x, y, z },\n      });\n    }\n\n    entitiesAtLoc\n      .filter((eId) => {\n        const entity = world.getEntity(eId);\n        return (\n          layer100Entities.matches(entity) ||\n          layer300Entities.matches(entity) ||\n          layer400Entities.matches(entity)\n        );\n      })\n      .forEach((eId) => {\n        const entity = world.getEntity(eId);\n        clearInfoBar();\n\n        if (entity.isInFov) {\n          drawText({\n            text: `You see a ${entity.description.name}(${entity.appearance.char}) here.`,\n            x: grid.infoBar.x,\n            y: grid.infoBar.y,\n            color: \"white\",\n            background: \"black\",\n          });\n        } else {\n          drawText({\n            text: `You remember seeing a ${entity.description.name}(${entity.appearance.char}) here.`,\n            x: grid.infoBar.x,\n            y: grid.infoBar.y,\n            color: \"white\",\n            background: \"black\",\n          });\n        }\n      });\n  }\n};\n\nconst renderInventory = (player) => {\n  clearInfoBar();\n  // translucent to obscure the game map\n  drawRect(0, 0, grid.width, grid.height, \"rgba(0,0,0,0.65)\");\n\n  drawText({\n    text: \"INVENTORY\",\n    background: \"black\",\n    color: \"white\",\n    x: grid.inventory.x,\n    y: grid.inventory.y,\n  });\n\n  drawText({\n    text: \"(c)Consume (d)Drop\",\n    background: \"black\",\n    color: \"#666\",\n    x: grid.inventory.x,\n    y: grid.inventory.y + 1,\n  });\n\n  if (player.inventory.list.length) {\n    player.inventory.list.forEach((entity, idx) => {\n      drawText({\n        text: `${idx === selectedInventoryIndex ? \"*\" : \" \"}${\n          entity.description.name\n        }`,\n        background: \"black\",\n        color: \"white\",\n        x: grid.inventory.x,\n        y: grid.inventory.y + 3 + idx,\n      });\n    });\n  } else {\n    drawText({\n      text: \"-empty-\",\n      background: \"black\",\n      color: \"#666\",\n      x: grid.inventory.x,\n      y: grid.inventory.y + 3,\n    });\n  }\n};\n\nconst renderTargeting = (mPos) => {\n  const { x, y, z } = mPos;\n  const locId = toLocId({ x, y, z });\n\n  const esAtLoc = readCacheSet(\"entitiesAtLocation\", locId);\n  const entitiesAtLoc = [...esAtLoc];\n\n  clearInfoBar();\n\n  if (entitiesAtLoc) {\n    if (some(entitiesAtLoc, (eId) => world.getEntity(eId).isRevealed)) {\n      drawCell({\n        appearance: {\n          char: \"\",\n          background: \"rgba(74, 232, 218, 0.5)\",\n        },\n        position: { x, y, z },\n      });\n    }\n  }\n};\n\nconst renderMenu = () => {\n  drawText({\n    text: `(i)Inventory (g)Pickup (arrow keys)Move/Attack (mouse)Look/Target (<)Stairs Up (>)Stairs Down`,\n    background: \"#000\",\n    color: \"#666\",\n    x: grid.menu.x,\n    y: grid.menu.y,\n  });\n\n  drawText({\n    text: `(n)New (s)Save (l)Load`,\n    background: \"#000\",\n    color: \"#666\",\n    x: grid.menu.x,\n    y: grid.menu.y + 1,\n  });\n}\n\nexport const render = (player) => {\n  renderMap();\n  renderPlayerHud(player);\n  renderMessageLog();\n  renderMenu();\n\n  if (gameState === \"INVENTORY\") {\n    renderInventory(player);\n  }\n};\n\n// info bar on mouseover\nconst canvas = document.querySelector(\"#canvas\");\ncanvas.onmousemove = throttle((e) => {\n  if (gameState === \"GAME\") {\n    const [x, y] = pxToCell(e);\n    renderMap();\n    renderInfoBar({ x, y, z: readCache(\"z\") });\n  }\n\n  if (gameState === \"TARGETING\") {\n    const [x, y] = pxToCell(e);\n    renderMap();\n    renderTargeting({ x, y, z: readCache(\"z\") });\n  }\n}, 50);","import { world } from \"../state/ecs\";\nimport { ActiveEffects, Animate, Paralyzed } from \"../state/components\";\n\nconst ActiveEffectsEntities = world.createQuery({\n  all: [ActiveEffects],\n});\n\n// XXX\nconst classes = { Paralyzed };\nfunction camelize(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n    return index === 0 ? word.toLowerCase() : word.toUpperCase();\n  }).replace(/\\s+/g, '');\n}\n\nexport const effects = () => {\n  ActiveEffectsEntities.get().forEach((entity) => {\n    entity.activeEffects.forEach((c) => {\n      if (entity[c.component]) {\n        entity[c.component].current += c.delta;\n\n        if (entity[c.component].current > entity[c.component].max) {\n          entity[c.component].current = entity[c.component].max;\n        }\n      }\n\n      if (c.events.length) {\n        c.events.forEach((event) => entity.fireEvent(event.name, event.args));\n      }\n\n      // handle addComponents\n      if (c.addComponents.length) {\n        c.addComponents.forEach((component) => {\n          // XXX: getClass\n          if (!entity.has(classes[component.name])) {\n            entity.add(classes[component.name], component.properties);\n          }\n        });\n      }\n\n      entity.add(Animate, { ...c.animate });\n\n      if (!c.duration) {\n        c.destroy();\n\n        if (c.addComponents.length) {\n          c.addComponents.forEach((component) => {\n            if (entity.has(classes[component.name])) {\n              // XXX\n              entity.remove(entity[camelize(component.name)], component.properties)\n            }\n          })\n        }\n      } else {\n        c.duration -= 1;\n      }\n    });\n  });\n};","\nimport { last } from \"lodash\";\nimport { world } from \"../state/ecs\";\nimport { clearCanvas, drawCell } from \"../lib/canvas\";\nconst { Animate, IsInFov } = require(\"../state/components\");\nimport { gameState } from \"../index\";\n\nconst animatingEntities = world.createQuery({\n  all: [Animate],\n});\n\nconst hexToRgb = (hex) => {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : {};\n};\n\nexport const animation = () => {\n  if (gameState !== \"GAME\") {\n    return;\n  }\n\n  animatingEntities.get().forEach((entity) => {\n    const animate = last(entity.animate);\n\n    const { r = 255, g = 255, b = 255 } = hexToRgb(animate.color);\n\n    const time = new Date();\n    // set animation startTime\n    if (!animate.startTime) {\n      entity.fireEvent(\"set-start-time\", { time });\n    }\n    const frameTime = time - animate.startTime;\n    // end animation when complete\n    if (frameTime > animate.duration) {\n      // XXX\n      const animate = entity.animate[0];\n      animate.destroy();\n      return;\n    }\n    const framePercent = frameTime / animate.duration;\n    // do the animation\n    // clear the cell first\n    clearCanvas(entity.position.x, entity.position.y, 1, 1);\n\n    // redraw the existing entity\n    drawCell(entity);\n\n    // draw the animation over top\n    drawCell({\n      appearance: {\n        char: animate.char || entity.appearance.char,\n        color: `rgba(${r}, ${g}, ${b}, ${1 - framePercent})`,\n        background: \"transparent\",\n      },\n      position: entity.position,\n    });\n  });\n};","\nimport ecs, { world } from \"../state/ecs\";\nimport { readCacheSet } from \"../state/cache\";\n\nimport { ActiveEffects, Effects, Target, TargetingItem } from \"../state/components\";\nimport { addLog } from \"..\";\n\nconst targetingEntities = world.createQuery({\n  all: [Target, TargetingItem],\n});\n\nexport const targeting = (player) => {\n  targetingEntities.get().forEach((entity) => {\n    const { item } = entity.targetingItem;\n    if (item && item.has(Effects)) {\n      entity.target.forEach((t) => {\n        const targets = readCacheSet(\"entitiesAtLocation\", t.locId);\n\n        targets.forEach((eId) => {\n          const target = world.getEntity(eId);\n          if (target.isInFov) {\n            // XXX: s/get(\"Effects\")/components[\"effects\"]/\n            item\n              .components[\"effects\"]\n              .forEach((x) => {\n                target.add(ActiveEffects, { ...x.serialize() });\n              });\n          }\n        });\n      });\n\n      entity.target.forEach((t) => {\n        t.destroy();\n      });\n      entity.remove(entity.targetingItem);\n\n      addLog(`You use a ${item.description.name}`);\n      // XXX\n      player.fireEvent(\"consume\", item);\n    }\n  });\n};","import sample from \"lodash.sample\";\nimport times from \"lodash.times\";\nimport get from \"lodash.get\";\nimport \"./lib/canvas.js\";\nimport { grid, pxToCell } from \"./lib/canvas.js\";\nimport { circle, toLocId, toCell } from \"./lib/grid\";\nimport { addCache, clearCache, deserializeCache, readCache, readCacheSet, serializeCache } from \"./state/cache.js\";\nimport { createDungeon } from \"./lib/dungeon.js\";\nimport { ai } from \"./systems/ai\";\nimport { fov } from \"./systems/fov.js\";\nimport { movement } from \"./systems/movement\";\nimport { render } from \"./systems/render\";\nimport { ecs, world } from \"./state/ecs\";\nimport {\n  ActiveEffects,\n  Ai,\n  Effects,\n  IsInFov,\n  Move,\n  Position,\n  Target,\n  TargetingItem,\n} from \"./state/components\";\nimport { update } from \"lodash\";\nimport { effects } from \"./systems/effects.js\";\nimport { animation } from \"./systems/animation.js\";\nimport { targeting } from \"./systems/targeting.js\";\nimport { Player, StairsDown, StairsUp } from \"./state/prefabs.js\";\n\nlet player = {};\nlet userInput = null;\nlet playerTurn = true;\nlet enemiesInFOV = null;\nexport let gameState = \"GAME\";\nexport let selectedInventoryIndex = 0;\nexport let messageLog = [\"\", \"Welcome to Gobs 'O Goblins!\", \"\"];\nexport const addLog = (text) => {\n  messageLog.unshift(text);\n};\n\n// XXX: work around for BigInt serialize\n// refs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\n// Use within JSON\nBigInt.prototype.toJSON = function() { return this.toString()  }\n\nconst newGame = () => {\n  for (let item of world.getEntities()) {\n    item.destroy();\n  }\n  clearCache();\n\n  userInput = null;\n  playerTurn = true;\n  gameState = \"GAME\";\n  selectedInventoryIndex = 0;\n\n  messageLog = [\"\", \"Welcome to Gobs 'O Goblins!\", \"\"];\n\n  initGame();\n}\n\nconst saveGame = () => {\n  const gameSaveData = {\n    world: world.serialize(),\n    cache: serializeCache(),\n    playerId: player.id,\n    messageLog,\n  };\n  console.log(gameSaveData);\n  localStorage.setItem(\"gameSaveData\", JSON.stringify(gameSaveData));\n  addLog(\"Game saved\");\n};\n\nconst loadGame = () => {\n  const data = JSON.parse(localStorage.getItem('gameSaveData'));\n  if (!data) {\n    addLog(\"Failed to load - no saved game found\");\n    return;\n  }\n\n  for (let entity of world.getEntities()) {\n    entity.destroy();\n  }\n  clearCache();\n\n  world.deserialize(data.world);\n  deserializeCache(data.cache);\n\n  player = world.getEntity(data.playerId);\n\n  userInput = null;\n  playerTurn = true;\n  gameState = \"GAME\";\n  selectedInventoryIndex = 0;\n\n  messageLog = data.messageLog;\n  addLog(\"Game loaded\");\n};\n\nconst initGame = () => {\n  // init game map and player position\n  const { stairsDown } = createDungeonLevel({ createStairsUp: false });\n\n  player = world.createPrefab(\"Player\");\n\n  addCache(`floors.${-1}`, {\n    stairsDown: toLocId(stairsDown.position),\n  });\n\n  player.add(Position, stairsDown.position);\n\n  fov(player);\n  render(player);\n};\n\nconst createDungeonLevel = ({\n  createStairsUp = true,\n  createStairsDown = true,\n} = {}) => {\n  const dungeon = createDungeon({\n    x: grid.map.x,\n    y: grid.map.y,\n    z: readCache('z'),\n    width: grid.map.width,\n    height: grid.map.height,\n  });\n\n  const openTiles = Object.values(dungeon.tiles).filter(\n    (x) => x.sprite === \"FLOOR\"\n  );\n\n  enemiesInFOV = world.createQuery({ all: [IsInFov, Ai] });\n\n  times(5, () => {\n    const tile = sample(openTiles);\n\n    world.createPrefab(\"Goblin\").add(Position, tile);\n  });\n\n  times(5, () => {\n    const tile = sample(openTiles);\n    world.createPrefab(\"HealthPotion\").add(Position, tile);\n  });\n\n  times(10, () => {\n    const tile = sample(openTiles);\n    world.createPrefab(\"ScrollLightning\").add(Position, tile);\n  });\n\n  times(10, () => {\n    const tile = sample(openTiles);\n    world.createPrefab(\"ScrollParalyze\").add(Position, tile);\n  });\n\n  times(10, () => {\n    const tile = sample(openTiles);\n    world.createPrefab(\"ScrollFireball\").add(Position, tile);\n  });\n\n  let stairsUp, stairsDown;\n\n  if (createStairsUp) {\n    times(1, () => {\n      const tile = sample(openTiles);\n      stairsUp = world.createPrefab(\"StairsUp\");\n      stairsUp.add(Position, tile);\n    });\n  }\n\n  if (createStairsDown) {\n    times(1, () => {\n      const tile = sample(openTiles);\n      stairsDown = world.createPrefab(\"StairsDown\");\n      stairsDown.add(Position, tile);\n    })\n  }\n\n  return { dungeon, stairsUp, stairsDown };\n};\n\nconst goToDungeonLevel = (level) => {\n  const goingUp = readCache(\"z\") < level;\n  const floor = readCache(\"floors\")[level];\n\n  if (floor) {\n    addCache(\"z\", level);\n    player.remove(player.position);\n    if (goingUp) {\n      player.add(Position, toCell(floor.stairsDown));\n    } else {\n      player.add(Position, toCell(floor.stairsUp));\n    }\n  } else {\n    addCache(\"z\", level);\n    const { stairsUp, stairsDown } = createDungeonLevel();\n\n    addCache(`floors.${level}`, {\n      stairsUp: toLocId(stairsUp.position),\n      stairsDown: toLocId(stairsDown.position),\n    });\n\n    player.remove(player.position);\n\n    if (goingUp) {\n      player.add(Position, toCell(stairsDown.position));\n    } else {\n      player.add(Position, toCell(stairsUp.position));\n    }\n  }\n\n  fov(player);\n  render(player);\n}\n\nwindow.addEventListener('load', (event) => {\n  initGame();\n\n  document.addEventListener(\"keydown\", (ev) => {\n    if (ev.key !== \"Shift\") {\n      userInput = ev.key;\n    }\n  });\n\n  const processUserInput = () => {\n    if (userInput === \"n\") {\n      newGame();\n    }\n\n    if (userInput === \"l\") {\n      loadGame();\n    }\n\n    if (userInput === \"s\") {\n      saveGame();\n    }\n\n    if (gameState === \"GAME\") {\n      if (userInput === \">\") {\n        if (\n          toLocId(player.position) ==\n          readCache(`floors.${readCache(\"z\")}.stairsDown`)\n        ) {\n          addLog(\"You descend deeper into the dungeon\");\n          goToDungeonLevel(readCache(\"z\") - 1);\n        } else {\n          addLog(\"There are no stairs to descend\");\n        }\n      }\n\n      if (userInput === \"<\") {\n        // XXX\n        if (\n          toLocId(player.position) ==\n          readCache(`floors.${readCache(\"z\")}.stairsUp`)\n        ) {\n          addLog(\"You climb from the depths of the dungeon\");\n          goToDungeonLevel(readCache(\"z\") + 1);\n        } else {\n          addLog(\"There are no stairs to climb\");\n        }\n      }\n\n      if (userInput === \"ArrowUp\") {\n        player.add(Move, { x: 0, y: -1, z: readCache(\"z\") });\n      }\n      if (userInput === \"ArrowRight\") {\n        player.add(Move, { x: 1, y: 0, z: readCache(\"z\") });\n      }\n      if (userInput === \"ArrowDown\") {\n        player.add(Move, { x: 0, y: 1, z: readCache(\"z\") });\n      }\n      if (userInput === \"ArrowLeft\") {\n        player.add(Move, { x: -1, y: 0, z: readCache(\"z\") });\n      }\n\n      if (userInput === \"g\") {\n        let pickupFound = false;\n        readCacheSet(\"entitiesAtLocation\", toLocId(player.position)).forEach(\n          (eId) => {\n            const entity = world.getEntity(eId);\n            if (entity.isPickup) {\n              pickupFound = true;\n              player.fireEvent(\"pick-up\", entity);\n              addLog(`You pickup a ${entity.description.name}`);\n            }\n          }\n        );\n        if (!pickupFound) {\n          addLog(\"There is nothing to pick up here\");\n        }\n      }\n\n      if (userInput == \"d\") {\n        if (player.inventory.list.length) {\n          player.fireEvent(\"drop\", player.inventory.list[0]);\n        }\n      }\n\n      if (userInput === \"i\") {\n        gameState = \"INVENTORY\";\n      }\n\n      userInput = null;\n    }\n\n    if (gameState === \"TARGETING\") {\n      if (userInput === \"Escape\") {\n        player.remove(player.targetingItem);\n        gameState = \"GAME\";\n      }\n\n      userInput = null;\n    }\n\n    if (gameState === \"INVENTORY\") {\n      if (userInput === \"i\" || userInput === \"Escape\") {\n        gameState = \"GAME\";\n      }\n\n      if (userInput === \"ArrowUp\") {\n        selectedInventoryIndex -= 1;\n        if (selectedInventoryIndex < 0) {\n          selectedInventoryIndex = 0;\n        }\n      }\n\n      if (userInput === \"ArrowDown\") {\n        selectedInventoryIndex += 1;\n        if (selectedInventoryIndex > player.inventory.list.length - 1) {\n          selectedInventoryIndex = player.inventory.list.length - 1;\n        }\n      }\n\n      if (userInput === \"c\") {\n        const entity = player.inventory.list[selectedInventoryIndex];\n\n        if (entity) {\n          if (entity.requiresTarget) {\n            if (entity.requiresTarget.acquired === \"RANDOM\") {\n              //get a target that is NOT the player\n              const target = sample([...enemiesInFOV.get()]);\n\n              if (target) {\n                player.add(TargetingItem, { item: entity });\n                player.add(Target, { locId: toLocId(target.position) });\n              } else {\n                addLog(`The scroll disintegrates uselessly in your hand`);\n                // XXX\n                player.fireEvent(\"consume\", entity);\n              }\n            }\n            if (entity.requiresTarget.acquired === \"MANUAL\") {\n              player.add(TargetingItem, { item: entity });\n              gameState = \"TARGETING\";\n              return;\n            }\n          } else if (entity.has(Effects)) {\n            // XXX: s/get(\"Effects\")/components(\"effects\")/\n            entity\n              .components[\"effects\"]\n              .forEach((x) => player.add(ActiveEffects, { ...x.serialize() }));\n\n            addLog(`You consume a ${entity.description.name}`);\n            // XXX\n            const idx = player.inventory.list.indexOf(entity);\n            player.inventory.list.splice(idx, 1);\n            entity.destroy();\n          }\n\n          if (selectedInventoryIndex > player.inventory.list.length - 1) {\n            selectedInventoryIndex = player.inventory.list.length - 1;\n          }\n\n          gameState = \"GAME\";\n        }\n      }\n\n      if (userInput === \"d\") {\n        if (player.inventory.list.length) {\n          addLog(`You drop a ${player.inventory.list[0].description.name}`);\n          player.fireEvent(\"drop\", player.inventory.list[0]);\n        }\n      }\n\n      userInput = null;\n    }\n  };\n\n  const update = () => {\n    animation();\n\n    if (player.isDead) {\n      if (gameState !== \"GAMEOVER\") {\n        addLog(\"You are dead.\");\n        render(player);\n      }\n      gameState = \"GAMEOVER\";\n      processUserInput();\n\n      return;\n    }\n\n    if (playerTurn && userInput && gameState === \"TARGETING\") {\n      processUserInput();\n      render(player);\n      playerTurn = true;\n    }\n\n    if (playerTurn && userInput && gameState === \"INVENTORY\") {\n      processUserInput();\n      targeting(player);\n      effects();\n      render(player);\n      playerTurn = true;\n    }\n\n    if (playerTurn && userInput && gameState === \"GAME\") {\n      processUserInput();\n      effects();\n      movement();\n      fov(player);\n      render(player);\n\n      if (gameState === \"GAME\") {\n        playerTurn = false;\n      }\n    }\n\n    if (!playerTurn) {\n      ai(player);\n      effects();\n      movement();\n      fov(player);\n      render(player);\n\n      playerTurn = true;\n    }\n  };\n\n  const gameLoop = () => {\n    update();\n    requestAnimationFrame(gameLoop);\n  };\n\n  requestAnimationFrame(gameLoop);\n\n  if (process.env.NODE_ENV === \"development\") {\n    const canvas = document.querySelector(\"#canvas\");\n\n    canvas.onclick = (e) => {\n      const [x, y] = pxToCell(e);\n      const locId = toLocId({x, y, z: readCache(\"z\") });\n\n      readCacheSet(\"entitiesAtLocation\", locId).forEach((eId) => {\n        const entity = world.getEntity(eId);\n\n        console.log(\n          `${get(entity, \"appearance.char\", \"?\")} ${get(\n            entity,\n            \"description.name\",\n            \"?\"\n          )}`,\n          entity.serialize()\n        );\n\n        if (gameState === \"TARGETING\") {\n          const entity = player.inventory.list[selectedInventoryIndex];\n          if (entity.requiresTarget.aoeRange) {\n            const targets = circle({ x, y }, entity.requiresTarget.aoeRange).map(\n              (locId) => `${locId},${readCache(\"z\")}`\n            );\n            targets.forEach((locId) => player.add(Target, { locId }));\n          } else {\n            player.add(Target, { locId });\n          }\n          gameState = \"GAME\";\n          targeting(player);\n          effects();\n          render(player);\n        }\n      });\n    };\n  }\n});"],"sourceRoot":""}